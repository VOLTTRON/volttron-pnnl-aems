{"version":3,"file":"static/js/212.071a1bfa.chunk.js","mappings":"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","sources":["routes/Configuration/util.ts","routes/Schedule/util.ts","routes/Setpoint/util.ts","routes/Unit/util.ts","routes/Units/Unit.tsx","routes/Units/Configuration.tsx","routes/Units/Holiday.tsx","routes/Units/Holidays.tsx","routes/Units/Occupancy.tsx","routes/Units/Occupancies.tsx","routes/Units/Schedule.tsx","routes/Units/Schedules.tsx","routes/Units/Setpoint.tsx","routes/Units/Setpoints.tsx","routes/Units/Units.tsx","routes/Units/index.tsx"],"sourcesContent":["import {\n  COOLING_DEFAULT,\n  DEADBAND_DEFAULT,\n  HEATING_DEFAULT,\n  SETPOINT_DEFAULT,\n  createSetpointLabel,\n} from \"routes/Setpoint/util\";\nimport { END_TIME_DEFAULT, START_TIME_DEFAULT, createScheduleLabel, toDataFormat } from \"routes/Schedule/util\";\n\nimport { DeepPartial } from \"../../utils/types\";\nimport { HolidayType } from \"common\";\nimport { IConfiguration } from \"controllers/configurations/action\";\nimport moment from \"moment\";\nimport { sum } from \"lodash\";\n\nconst createConfigurationLabel = (configuration?: DeepPartial<IConfiguration>) => {\n  return moment().format(\"dddd, MMMM Do YYYY\");\n};\n\nconst isConfigurationDelete = (configuration: DeepPartial<IConfiguration>) => {\n  return sum(Object.values(configuration?._count || {})) === 0;\n};\n\nconst createConfigurationDefault = (label: string = createConfigurationLabel()): DeepPartial<IConfiguration> => {\n  const setpoint = {\n    label: \"\",\n    setpoint: SETPOINT_DEFAULT,\n    deadband: DEADBAND_DEFAULT,\n    heating: HEATING_DEFAULT,\n    cooling: COOLING_DEFAULT,\n  };\n  setpoint.label = createSetpointLabel(\"all\", setpoint);\n  const schedule = {\n    label: \"\",\n    occupied: true,\n    startTime: toDataFormat(START_TIME_DEFAULT),\n    endTime: toDataFormat(END_TIME_DEFAULT),\n  };\n  schedule.label = createScheduleLabel(\"all\", schedule);\n  const unoccupied = {\n    label: \"\",\n    occupied: false,\n    startTime: toDataFormat(START_TIME_DEFAULT),\n    endTime: toDataFormat(END_TIME_DEFAULT),\n  };\n  unoccupied.label = createScheduleLabel(\"all\", unoccupied);\n  const enabled = [\n    HolidayType.NewYearsDayType,\n    HolidayType.MartinLutherKingJrType,\n    HolidayType.PresidentsDayType,\n    HolidayType.MemorialDayType,\n    HolidayType.JuneteenthType,\n    HolidayType.IndependenceDayType,\n    HolidayType.LaborDayType,\n    HolidayType.ColumbusDayType,\n    HolidayType.VeteransDayType,\n    HolidayType.ThanksgivingType,\n    HolidayType.BlackFridayType,\n    HolidayType.ChristmasType,\n  ].map((h) => h.name);\n  const holidays = HolidayType.values.map((h) => ({\n    label: h.label,\n    type: enabled.includes(h.name) ? (\"Enabled\" as const) : (\"Disabled\" as const),\n  }));\n  return {\n    label,\n    setpoint,\n    mondaySchedule: schedule,\n    tuesdaySchedule: schedule,\n    wednesdaySchedule: schedule,\n    thursdaySchedule: schedule,\n    fridaySchedule: schedule,\n    saturdaySchedule: unoccupied,\n    sundaySchedule: unoccupied,\n    holidaySchedule: unoccupied,\n    holidays: holidays,\n  };\n};\n\nexport { createConfigurationLabel, createConfigurationDefault, isConfigurationDelete };\n","import { isNumber, sum } from \"lodash\";\n\nimport { ISchedule } from \"controllers/schedules/action\";\nimport moment from \"moment\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst TIME_PADDING = 120;\nconst START_TIME_MIN = 0 * 60;\nconst START_TIME_DEFAULT = 8 * 60;\nconst END_TIME_MAX = 24 * 60;\nconst END_TIME_DEFAULT = 18 * 60;\nconst DATA_FORMAT = \"HH:mm\";\nconst TIME_FORMAT = \"h:mm\\xa0a\";\n\ntype Required = \"startTime\" | \"endTime\";\n\nconst toDataFormat = (value: number) =>\n  moment(\"00:00\", [DATA_FORMAT])\n    .add(Math.trunc(value / 60), \"hours\")\n    .add(value % 60, \"minutes\")\n    .format(DATA_FORMAT);\n\nconst toTimeFormat = (value: number) =>\n  moment(\"00:00\", [DATA_FORMAT])\n    .add(Math.trunc(value / 60), \"hours\")\n    .add(value % 60, \"minutes\")\n    .format(TIME_FORMAT);\n\nconst toUpperBound = (value: number, boundary: number, upper?: boolean) => (upper && value === 0 ? boundary : value);\n\nconst toMinutes = (value?: string, upper?: boolean) =>\n  toUpperBound(moment(value, [DATA_FORMAT, TIME_FORMAT]).hours(), 24, upper) * 60 +\n  moment(value, [DATA_FORMAT, TIME_FORMAT]).minutes();\n\nconst createScheduleLabel = (\n  type: \"all\" | Required,\n  schedule:\n    | (DeepPartial<ISchedule> & Pick<ISchedule, Required>)\n    | { occupied?: boolean; startTime: number; endTime: number }\n): string => {\n  const occupied = schedule?.occupied === undefined ? true : schedule.occupied;\n  const startTime = isNumber(schedule.startTime) ? schedule.startTime : toMinutes(schedule.startTime, false);\n  const endTime = isNumber(schedule.endTime) ? schedule.endTime : toMinutes(schedule.endTime, true);\n  switch (type) {\n    case \"startTime\":\n      return `${toTimeFormat(startTime)}`;\n    case \"endTime\":\n      return `${toTimeFormat(endTime)}`;\n    case \"all\":\n    default:\n      return occupied\n        ? startTime === 0 && endTime === 1440\n          ? \"Occupied All Day\"\n          : `Occupied From Start Time: ${toTimeFormat(startTime)} To End Time: ${toTimeFormat(endTime)}`\n        : \"Unoccupied All Day\";\n  }\n};\n\nconst getScheduleMessage = (schedule: DeepPartial<ISchedule> & Pick<ISchedule, Required>): string | undefined => {\n  return undefined;\n};\n\nconst isScheduleValid = (schedule: DeepPartial<ISchedule> & Pick<ISchedule, Required>): boolean => {\n  return getScheduleMessage(schedule) === undefined;\n};\n\nconst isScheduleDelete = (schedule: DeepPartial<ISchedule>) => {\n  return sum(Object.values(schedule?._count || {})) === 0;\n};\n\nexport {\n  TIME_PADDING,\n  START_TIME_MIN,\n  START_TIME_DEFAULT,\n  END_TIME_MAX,\n  END_TIME_DEFAULT,\n  DATA_FORMAT,\n  TIME_FORMAT,\n  toDataFormat,\n  toTimeFormat,\n  toMinutes,\n  createScheduleLabel,\n  getScheduleMessage,\n  isScheduleValid,\n  isScheduleDelete,\n};\n","import { isNumber, sum } from \"lodash\";\n\nimport { ISetpoint } from \"controllers/setpoints/action\";\nimport { ValidateType } from \"common\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst SETPOINT_PADDING = parseInt(process.env.REACT_APP_SETPOINT_PADDING || \"2\");\nconst DEADBAND_MIN = (ValidateType.DeadbandType.options?.min as number) || 2;\nconst DEADBAND_MAX = (ValidateType.DeadbandType.options?.max as number) || 6;\nconst DEADBAND_DEFAULT = (ValidateType.DeadbandType.options?.default as number) || 4;\nconst HEATING_MIN = (ValidateType.HeatingType.options?.min as number) || 55;\nconst HEATING_DEFAULT = (ValidateType.HeatingType.options?.default as number) || 60;\nconst COOLING_MAX = (ValidateType.CoolingType.options?.max as number) || 85;\nconst COOLING_DEFAULT = (ValidateType.CoolingType.options?.default as number) || 80;\nconst SETPOINT_MIN = HEATING_MIN;\nconst SETPOINT_MAX = COOLING_MAX;\nconst SETPOINT_DEFAULT = (ValidateType.SetpointType.options?.default as number) || 70;\n\ntype Required = \"setpoint\" | \"deadband\" | \"heating\" | \"cooling\";\n\nconst createSetpointLabel = (\n  type: \"all\" | Required,\n  setpoint: DeepPartial<ISetpoint> & Pick<ISetpoint, Required>\n): string => {\n  switch (type) {\n    case \"all\":\n      return `Occupied Setpoint: ${createSetpointLabel(\"setpoint\", setpoint)} Deadband: ${createSetpointLabel(\n        \"deadband\",\n        setpoint\n      )} Unoccupied Heating: ${createSetpointLabel(\"heating\", setpoint)} Cooling: ${createSetpointLabel(\n        \"cooling\",\n        setpoint\n      )}`;\n    case \"setpoint\":\n    case \"deadband\":\n    case \"heating\":\n    case \"cooling\":\n    default:\n      return `${setpoint[type]}º\\xa0F`;\n  }\n};\n\nconst getSetpointMessage = (setpoint: DeepPartial<ISetpoint> & Pick<ISetpoint, Required>): string | undefined => {\n  if (setpoint.deadband < DEADBAND_MIN || setpoint.deadband > DEADBAND_MAX) {\n    return `Deadband must be in the range [${DEADBAND_MIN},${DEADBAND_MAX}].`;\n  } else if (\n    setpoint.setpoint < setpoint.heating + SETPOINT_PADDING + setpoint.deadband / 2 ||\n    setpoint.setpoint > setpoint.cooling - SETPOINT_PADDING - setpoint.deadband / 2\n  ) {\n    return `Occupied setpoint must be in the range [${setpoint.heating + SETPOINT_PADDING + setpoint.deadband / 2},${\n      setpoint.cooling - SETPOINT_PADDING - setpoint.deadband / 2\n    }]`;\n  } else if (setpoint.heating < HEATING_MIN || setpoint.cooling > COOLING_MAX) {\n    return `Unoccupied heating and cooling must be in the range [${HEATING_MIN},${COOLING_MAX}]`;\n  } else if (setpoint.setpoint % 0.5 !== 0) {\n    return \"Occupied setpoint must be a whole or half degree.\";\n  } else if (setpoint.deadband % 1 !== 0) {\n    return \"Deadband must be a whole degree.\";\n  } else if (setpoint.heating % 0.5 !== 0 || setpoint.cooling % 0.5 !== 0) {\n    return \"Unoccupied heating or cooling must be a whole or half degree.\";\n  }\n};\n\nconst isSetpointValid = (setpoint: DeepPartial<ISetpoint> | undefined): boolean => {\n  if (\n    !setpoint ||\n    !isNumber(setpoint.setpoint) ||\n    !isNumber(setpoint.deadband) ||\n    !isNumber(setpoint.heating) ||\n    !isNumber(setpoint.cooling)\n  ) {\n    return false;\n  }\n  return getSetpointMessage(setpoint as DeepPartial<ISetpoint> & Pick<ISetpoint, Required>) === undefined;\n};\n\nconst isSetpointDelete = (setpoint: DeepPartial<ISetpoint>) => {\n  return sum(Object.values(setpoint?._count || {})) === 0;\n};\n\nexport {\n  SETPOINT_PADDING,\n  DEADBAND_MIN,\n  DEADBAND_MAX,\n  DEADBAND_DEFAULT,\n  HEATING_MIN,\n  HEATING_DEFAULT,\n  COOLING_MAX,\n  COOLING_DEFAULT,\n  SETPOINT_MIN,\n  SETPOINT_MAX,\n  SETPOINT_DEFAULT,\n  createSetpointLabel,\n  getSetpointMessage,\n  isSetpointValid,\n  isSetpointDelete,\n};\n","import { IUnit } from \"controllers/units/action\";\nimport { ValidateType } from \"common\";\nimport moment from \"moment\";\nimport { sum } from \"lodash\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst COOLING_CAPACITY_MIN = ValidateType.CoolingCapacityType.options?.min as number;\nconst COOLING_CAPACITY_MAX = ValidateType.CoolingCapacityType.options?.max as number;\n\nconst COMPRESSORS_MIN = ValidateType.CompressorsType.options?.min as number;\nconst COMPRESSORS_MAX = ValidateType.CompressorsType.options?.max as number;\n\nconst COOLING_LOCKOUT_MIN = ValidateType.CoolingLockoutType.options?.min as number;\nconst COOLING_LOCKOUT_MAX = ValidateType.CoolingLockoutType.options?.max as number;\n\nconst OPTIMAL_START_LOCKOUT_MIN = ValidateType.OptimalStartLockoutType.options?.min as number;\nconst OPTIMAL_START_LOCKOUT_MAX = ValidateType.OptimalStartLockoutType.options?.max as number;\n\nconst OPTIMAL_START_DEVIATION_MIN = ValidateType.OptimalStartDeviationType.options?.min as number;\nconst OPTIMAL_START_DEVIATION_MAX = ValidateType.OptimalStartDeviationType.options?.max as number;\n\nconst EARLIEST_START_MIN = ValidateType.EarliestStartType.options?.min as number;\nconst EARLIEST_START_MAX = ValidateType.EarliestStartType.options?.max as number;\n\nconst LATEST_START_MIN = ValidateType.LatestStartType.options?.min as number;\nconst LATEST_START_MAX = ValidateType.LatestStartType.options?.max as number;\n\nconst HEAT_PUMP_BACKUP_MIN = ValidateType.HeatPumpBackupType.options?.min as number;\nconst HEAT_PUMP_BACKUP_MAX = ValidateType.HeatPumpBackupType.options?.max as number;\n\nconst HEAT_PUMP_LOCKOUT_MIN = ValidateType.HeatPumpLockoutType.options?.min as number;\nconst HEAT_PUMP_LOCKOUT_MAX = ValidateType.HeatPumpLockoutType.options?.max as number;\n\nconst SETPOINT_PEAK_OFFSET_MIN = ValidateType.SetpointPeakOffsetType.options?.min as number;\nconst SETPOINT_PEAK_OFFSET_MAX = ValidateType.SetpointPeakOffsetType.options?.max as number;\n\nconst ECONOMIZER_SETPOINT_MIN = ValidateType.EconomizerSetpoint.options?.min as number;\nconst ECONOMIZER_SETPOINT_MAX = ValidateType.EconomizerSetpoint.options?.max as number;\n\nconst createUnitLabel = (unit: DeepPartial<IUnit>) => {\n  return moment().format(\"dddd, MMMM Do YYYY\");\n};\n\nconst isDelete = (unit: DeepPartial<IUnit>) => {\n  return sum(Object.values(unit?._count || {})) === 0;\n};\n\nexport {\n  createUnitLabel,\n  isDelete,\n  COOLING_CAPACITY_MIN,\n  COOLING_CAPACITY_MAX,\n  COMPRESSORS_MIN,\n  COMPRESSORS_MAX,\n  COOLING_LOCKOUT_MIN,\n  COOLING_LOCKOUT_MAX,\n  OPTIMAL_START_LOCKOUT_MIN,\n  OPTIMAL_START_LOCKOUT_MAX,\n  OPTIMAL_START_DEVIATION_MIN,\n  OPTIMAL_START_DEVIATION_MAX,\n  EARLIEST_START_MIN,\n  EARLIEST_START_MAX,\n  LATEST_START_MIN,\n  LATEST_START_MAX,\n  HEAT_PUMP_BACKUP_MIN,\n  HEAT_PUMP_BACKUP_MAX,\n  HEAT_PUMP_LOCKOUT_MIN,\n  HEAT_PUMP_LOCKOUT_MAX,\n  SETPOINT_PEAK_OFFSET_MIN,\n  SETPOINT_PEAK_OFFSET_MAX,\n  ECONOMIZER_SETPOINT_MIN,\n  ECONOMIZER_SETPOINT_MAX,\n};\n","import {\n  Button,\n  HandleInteractionKind,\n  HandleType,\n  InputGroup,\n  Label,\n  Menu,\n  MenuItem,\n  MultiSlider,\n  NumericInput,\n  Tag,\n} from \"@blueprintjs/core\";\nimport {\n  COMPRESSORS_MAX,\n  COMPRESSORS_MIN,\n  COOLING_CAPACITY_MAX,\n  COOLING_CAPACITY_MIN,\n  COOLING_LOCKOUT_MAX,\n  COOLING_LOCKOUT_MIN,\n  EARLIEST_START_MAX,\n  EARLIEST_START_MIN,\n  ECONOMIZER_SETPOINT_MAX,\n  ECONOMIZER_SETPOINT_MIN,\n  HEAT_PUMP_BACKUP_MAX,\n  HEAT_PUMP_BACKUP_MIN,\n  HEAT_PUMP_LOCKOUT_MAX,\n  HEAT_PUMP_LOCKOUT_MIN,\n  LATEST_START_MAX,\n  LATEST_START_MIN,\n  OPTIMAL_START_DEVIATION_MAX,\n  OPTIMAL_START_DEVIATION_MIN,\n  OPTIMAL_START_LOCKOUT_MAX,\n  OPTIMAL_START_LOCKOUT_MIN,\n  SETPOINT_PEAK_OFFSET_MAX,\n  SETPOINT_PEAK_OFFSET_MIN,\n} from \"routes/Unit/util\";\nimport { get, merge } from \"lodash\";\nimport { useCallback, useState } from \"react\";\n\nimport { DeepPartial } from \"../../utils/types\";\nimport { IEnum } from \"common/types\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport { ZoneType } from \"common\";\n\nexport function Unit(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n  hidden?: Array<string>;\n}) {\n  const { hidden, unit, editing, handleChange } = props;\n\n  const [temp, setTemp] = useState({} as any);\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  const renderNumeric = (\n    props: any,\n    label: string,\n    min: number,\n    max: number,\n    path: string,\n    element?: any,\n    fractions?: boolean\n  ) => {\n    let value = temp[path];\n    if (value === undefined) {\n      value = getValue(path);\n    }\n    return (\n      <Label>\n        <b>{label}</b>\n        <NumericInput\n          {...props}\n          step={1}\n          {...(fractions && { minorStepSize: 0.0001 })}\n          min={min}\n          max={max}\n          value={value}\n          onValueChange={(v, s) => {\n            if (fractions) {\n              setTemp(merge({}, temp, { [path]: s }));\n            }\n            handleChange(path, editing)(v);\n          }}\n          rightElement={element}\n          clampValueOnBlur\n        />\n      </Label>\n    );\n  };\n\n  const renderTemperature = (props: any, label: string, min: number, max: number, step: number, path: string) => {\n    return (\n      <Label>\n        <b>{label}</b>\n        <MultiSlider\n          {...props}\n          min={min}\n          max={max}\n          stepSize={0.5}\n          labelStepSize={step}\n          labelRenderer={(v, o) => (o?.isHandleTooltip || (v > min && v < max) ? `${v}º\\xa0F` : \"\")}\n        >\n          <MultiSlider.Handle\n            type={HandleType.FULL}\n            interactionKind={HandleInteractionKind.LOCK}\n            value={getValue(path)}\n            onChange={(v) => {\n              handleChange(path, editing)(v);\n            }}\n          />\n        </MultiSlider>\n      </Label>\n    );\n  };\n\n  const renderDuration = (props: any, label: string, min: number, max: number, step: number, path: string) => {\n    return (\n      <Label>\n        <b>{label}</b>\n        <MultiSlider\n          {...props}\n          min={min}\n          max={max}\n          stepSize={5}\n          labelStepSize={step}\n          labelRenderer={(v, o) => (o?.isHandleTooltip || (v > min && v < max) ? `${v}\\xa0min` : \"\")}\n        >\n          <MultiSlider.Handle\n            type={HandleType.FULL}\n            interactionKind={HandleInteractionKind.LOCK}\n            value={getValue(path)}\n            onChange={(v) => {\n              handleChange(path, editing)(v);\n            }}\n          />\n        </MultiSlider>\n      </Label>\n    );\n  };\n\n  const renderSelect = (\n    props: any,\n    label: string,\n    values: Array<IEnum<unknown> | { name: any; label: string }>,\n    path: string,\n    transform?: (v: string) => any\n  ) => {\n    return (\n      <Label>\n        <b>{label}</b>\n        <Popover2\n          content={\n            <Menu>\n              {values?.map((value) => (\n                <MenuItem\n                  key={value.label}\n                  text={value.label}\n                  onClick={() => handleChange(path, editing)(value.name)}\n                />\n              ))}\n            </Menu>\n          }\n          placement=\"bottom-start\"\n        >\n          <Button {...props} rightIcon={IconNames.CARET_DOWN} minimal>\n            {transform ? transform(getValue(path)) : getValue(path)}\n          </Button>\n        </Popover2>\n      </Label>\n    );\n  };\n\n  // const renderCheckbox = (\n  //   props: any,\n  //   label: string,\n  //   path: string,\n  //   description: (value: boolean) => string,\n  //   reversed?: boolean\n  // ) => {\n  //   const value = getValue(path);\n  //   return (\n  //     <Label>\n  //       <b>{label}</b>\n  //       <Checkbox\n  //         {...props}\n  //         label={description(value)}\n  //         checked={reversed ? !value : value}\n  //         onClick={() => handleChange(path, unit)(reversed ? value : !value)}\n  //       />\n  //     </Label>\n  //   );\n  // };\n\n  return (\n    <>\n      <div className=\"row\" hidden={hidden?.includes(\"label\")}>\n        <h3> </h3>\n        <div className=\"unit\">\n          <Label>\n            <b>Unit Label</b>\n            <InputGroup\n              type=\"text\"\n              value={getValue(`label`)}\n              onChange={(e) => {\n                handleChange(`label`, editing)(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"peakLoadExclude\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Participate in Grid Services\",\n            [\n              { name: false, label: \"Yes\" },\n              { name: true, label: \"No\" },\n            ],\n            `peakLoadExclude`,\n            (v) => (v ? \"No\" : \"Yes\")\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"zoneLocation\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Zone Location\",\n            ZoneType.values.filter((v) => v.type === \"location\"),\n            `zoneLocation`,\n            (v) => ZoneType.parse(v)?.label || v\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"zoneMass\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Zone Mass\",\n            ZoneType.values.filter((v) => v.type === \"mass\"),\n            `zoneMass`,\n            (v) => ZoneType.parse(v)?.label || v\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"zoneOrientation\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Zone Orientation\",\n            ZoneType.values.filter((v) => v.type === \"orientation\"),\n            `zoneOrientation`,\n            (v) => ZoneType.parse(v)?.label || v\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"zoneBuilding\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Zone Type\",\n            ZoneType.values.filter((v) => v.type === \"building\"),\n            `zoneBuilding`,\n            (v) => ZoneType.parse(v)?.label || v\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"coolingCapacity\")}>\n        <div className=\"unit\">\n          {renderNumeric(\n            {},\n            \"Rated Cooling Capacity\",\n            COOLING_CAPACITY_MIN,\n            COOLING_CAPACITY_MAX,\n            `coolingCapacity`,\n            <Tag minimal>tons</Tag>\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"compressors\")}>\n        <div className=\"unit\">\n          {renderNumeric({}, \"Number of Compressors\", COMPRESSORS_MIN, COMPRESSORS_MAX, `compressors`)}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"heatPump\")}>\n        <div className=\"select\">\n          {renderSelect(\n            {},\n            \"Heat Pump\",\n            [\n              { name: true, label: \"Yes\" },\n              { name: false, label: \"No\" },\n            ],\n            `heatPump`,\n            (v) => (v ? \"Yes\" : \"No\")\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"heatPumpBackup\")}>\n        <div className=\"unit\">\n          {renderNumeric(\n            getValue(\"heatPump\") ? {} : { disabled: true },\n            \"Heat Pump Electric Backup Capacity\",\n            HEAT_PUMP_BACKUP_MIN,\n            HEAT_PUMP_BACKUP_MAX,\n            `heatPumpBackup`,\n            <Tag minimal>kW</Tag>,\n            true\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"setpointPeakOffset\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            getValue(\"peakLoadExclude\") ? { disabled: true } : {},\n            \"Setpoint Offset During Grid Services\",\n            SETPOINT_PEAK_OFFSET_MIN,\n            SETPOINT_PEAK_OFFSET_MAX,\n            1,\n            `setpointPeakOffset`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"optimalStartLockout\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            {},\n            \"Disable Optimal Start when Outdoor Temperatures are below\",\n            OPTIMAL_START_LOCKOUT_MIN,\n            OPTIMAL_START_LOCKOUT_MAX,\n            2,\n            `optimalStartLockout`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"optimalStartDeviation\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            {},\n            \"Optimal Start Allowable Zone Temperature Deviation\",\n            OPTIMAL_START_DEVIATION_MIN,\n            OPTIMAL_START_DEVIATION_MAX,\n            0.5,\n            `optimalStartDeviation`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"earliestStart\")}>\n        <div className=\"unit\">\n          {renderDuration(\n            {},\n            \"Earliest Start Time Before Occupancy\",\n            EARLIEST_START_MIN,\n            EARLIEST_START_MAX,\n            30,\n            `earliestStart`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"latestStart\")}>\n        <div className=\"unit\">\n          {renderDuration(\n            {},\n            \"Latest Start Time Before Occupancy\",\n            LATEST_START_MIN,\n            LATEST_START_MAX,\n            15,\n            `latestStart`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"economizer\")}>\n        <div className=\"select\">\n          {renderSelect(\n            getValue(\"heatPump\") ? {} : { disabled: true },\n            \"Economizer\",\n            [\n              { name: true, label: \"Yes\" },\n              { name: false, label: \"No\" },\n            ],\n            `economizer`,\n            (v) => (v ? \"Yes\" : \"No\")\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"economizerSetpoint\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            getValue(\"economizer\") ? {} : { disabled: true },\n            \"Economizer Switchover Temperature Setpoint\",\n            ECONOMIZER_SETPOINT_MIN,\n            ECONOMIZER_SETPOINT_MAX,\n            5,\n            `economizerSetpoint`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"heatPumpLockout\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            getValue(\"heatPump\") ? {} : { disabled: true },\n            \"Heat Pump Auxiliary Heat Lockout\",\n            HEAT_PUMP_LOCKOUT_MIN,\n            HEAT_PUMP_LOCKOUT_MAX,\n            5,\n            `heatPumpLockout`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n      <div className=\"row\" hidden={hidden?.includes(\"coolingLockout\")}>\n        <div className=\"unit\">\n          {renderTemperature(\n            getValue(\"economizer\") ? {} : { disabled: true },\n            \"Compressor Cooling Lockout Temperature\",\n            COOLING_LOCKOUT_MIN,\n            COOLING_LOCKOUT_MAX,\n            5,\n            `coolingLockout`\n          )}\n        </div>\n        <div />\n        <div />\n      </div>\n    </>\n  );\n}\n","import { Button, InputGroup, Label, Menu, MenuItem } from \"@blueprintjs/core\";\n\nimport { IConfiguration } from \"controllers/configurations/action\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport { get } from \"lodash\";\nimport { useCallback } from \"react\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Configuration(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  configurations?: IConfiguration[];\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n  handleCreate: (unit: DeepPartial<IUnit>) => void;\n}) {\n  const { unit, editing, configurations, handleChange, handleCreate } = props;\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"configuration select\">\n          <Label>\n            <h3>Select Configuration</h3>\n            <Popover2\n              content={\n                <Menu>\n                  <MenuItem text=\"New Configuration\" onClick={() => handleCreate(unit)} />\n                  {configurations?.map((configuration) => (\n                    <MenuItem\n                      key={configuration.id}\n                      text={configuration.label}\n                      onClick={() => handleChange(\"configurationId\", unit)(configuration.id as number)}\n                    />\n                  ))}\n                </Menu>\n              }\n              placement=\"bottom-start\"\n            >\n              <Button rightIcon={IconNames.CARET_DOWN} minimal>\n                {unit?.configuration?.label || \"Select Configuration...\"}\n              </Button>\n            </Popover2>\n          </Label>\n        </div>\n        <div />\n      </div>\n      <div className=\"row\">\n        <div className=\"label\">\n          <Label>\n            <b>Configuration Label</b>\n            <InputGroup\n              type=\"text\"\n              value={getValue(\"configuration.label\")}\n              onChange={(e) => handleChange(\"configuration.label\", editing)(e.target.value)}\n            />\n          </Label>\n        </div>\n        <div />\n      </div>\n    </>\n  );\n}\n","import { Button, Checkbox, InputGroup, Intent, Label } from \"@blueprintjs/core\";\n\nimport { IHoliday } from \"controllers/holidays/action\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { ObservanceType } from \"common\";\nimport { get } from \"lodash\";\nimport moment from \"moment\";\nimport { useCallback } from \"react\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Holiday(props: {\n  path: string;\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  holiday: DeepPartial<IHoliday>;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { path, unit, editing, holiday, handleChange } = props;\n  const { id, label, type, month, day, observance } = holiday;\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  switch (type) {\n    case \"Custom\":\n      const suffix = observance && ObservanceType.parse(observance)?.label;\n      const desc = `${moment()\n        .set(\"month\", (month as number) - 1)\n        .set(\"date\", day as number)\n        .format(\"MMMM Do\")} ${suffix && `(${suffix})`}`;\n\n      return (\n        <>\n          <div className=\"row\">\n            <div>\n              <Label>\n                <b>{label}</b>\n                <InputGroup type=\"text\" value={desc} readOnly />\n              </Label>\n            </div>\n            <div>\n              <Button\n                icon={IconNames.TRASH}\n                intent={Intent.WARNING}\n                minimal\n                onClick={() => {\n                  handleChange(path, editing)({ id: id, type: type, action: \"delete\" });\n                }}\n              />\n            </div>\n          </div>\n        </>\n      );\n    case \"Enabled\":\n    case \"Disabled\":\n    default:\n      return (\n        <div className=\"row\">\n          <div className=\"holiday\">\n            <Label>\n              <b>{label}</b>\n              <Checkbox\n                label=\"Enabled\"\n                checked={getValue(`${path}.type`) === \"Enabled\"}\n                onClick={() => {\n                  handleChange(\n                    `${path}`,\n                    editing\n                  )({\n                    id: getValue(`${path}.id`),\n                    type: getValue(`${path}.type`) === \"Enabled\" ? \"Disabled\" : \"Enabled\",\n                  });\n                }}\n              />\n            </Label>\n          </div>\n          <div />\n        </div>\n      );\n  }\n}\n","import { Alert, Button, InputGroup, Intent, Label, Menu, MenuItem } from \"@blueprintjs/core\";\nimport { HolidayType, ObservanceType } from \"common\";\nimport { IHoliday, deleteHoliday } from \"controllers/holidays/action\";\nimport { get, isEmpty, merge } from \"lodash\";\n\nimport { DatePicker } from \"@blueprintjs/datetime\";\nimport { Holiday } from \"./Holiday\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst holidayOrder = HolidayType.values.map((a) => a.label);\n\nfunction CreateHoliday(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n  holidays: IHoliday[];\n}) {\n  const { unit, editing, handleChange, holidays } = props;\n\n  const [label, setLabel] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [observance, setObservance] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <div className=\"label\">\n        <Label>\n          <b>Holiday Label</b>\n          <InputGroup type=\"text\" value={label} onChange={(e) => setLabel(e.target.value)} />\n        </Label>\n      </div>\n      <div>\n        <Label>\n          <b>Date</b>\n          <Popover2\n            content={\n              <DatePicker\n                value={date}\n                onChange={(d, u) => {\n                  if (d) {\n                    setDate(d);\n                  }\n                  setOpen(!u);\n                }}\n              />\n            }\n            isOpen={open}\n            placement=\"bottom-start\"\n          >\n            <Button rightIcon={IconNames.CALENDAR} onClick={() => setOpen(true)} minimal>\n              {moment(date).format(\"MMMM Do\")}\n            </Button>\n          </Popover2>\n        </Label>\n      </div>\n      <div>\n        <Label>\n          <b>Observance</b>\n          <Popover2\n            content={\n              <Menu>\n                <MenuItem text=\"Always on Date\" onClick={() => setObservance(\"\")} />\n                {ObservanceType.values.map((o) => (\n                  <MenuItem key={o.name} text={o.label} onClick={() => setObservance(o.label)} />\n                ))}\n              </Menu>\n            }\n            placement=\"bottom-start\"\n          >\n            <Button rightIcon={IconNames.CARET_DOWN} minimal>\n              {observance || \"Always on Date\"}\n            </Button>\n          </Popover2>\n        </Label>\n      </div>\n      <div>\n        <Button\n          icon={IconNames.NEW_LAYER}\n          intent={Intent.PRIMARY}\n          minimal\n          disabled={isEmpty(label) || holidays.find((v) => v.label === label) !== undefined}\n          onClick={() => {\n            const i = Math.max(\n              get(unit, \"configuration.holidays.length\", 0),\n              get(editing, \"configuration.holidays.length\", 0)\n            );\n            handleChange(\n              `configuration.holidays.${i}`,\n              editing\n            )({\n              type: \"Custom\",\n              label,\n              month: date.getMonth() + 1,\n              day: date.getDate(),\n              observance,\n              configurationId: unit?.configuration?.id,\n              createdAt: moment().format(),\n              action: \"create\",\n            } as IHoliday);\n            setLabel(\"\");\n            setDate(new Date());\n            setObservance(\"\");\n          }}\n        >\n          Create Holiday\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport function Holidays(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { unit, editing, handleChange } = props;\n\n  const dispatch = useDispatch();\n  const [deleting, setDeleting] = useState(undefined as DeepPartial<IHoliday> | undefined);\n\n  const holidays = merge([], unit.configuration?.holidays, get(editing, \"configuration.holidays\")) as (IHoliday & {\n    index: number;\n  })[];\n  holidays.forEach((h, i) => (h.index = i));\n  return (\n    <>\n      <Label>\n        <h3>Create Holiday</h3>\n        <CreateHoliday unit={unit} editing={editing} handleChange={handleChange} holidays={holidays} />\n      </Label>\n      <Label>\n        <h3>Custom Holidays</h3>\n        <ul>\n          {isEmpty(holidays.filter((a) => a.type === \"Custom\" && a.action !== \"delete\")) ? (\n            <li key={\"empty\"}>No Custom Holidays Defined</li>\n          ) : (\n            holidays\n              .filter((a) => a.type === \"Custom\" && a.action !== \"delete\")\n              .sort((a, b) => moment(b.createdAt).valueOf() - moment(a.createdAt).valueOf())\n              .map((holiday, i) => (\n                <li key={holiday.index}>\n                  <Holiday\n                    key={holiday.index}\n                    path={`configuration.holidays.${holiday.index}`}\n                    unit={unit}\n                    editing={editing}\n                    holiday={holiday}\n                    handleChange={handleChange}\n                  />\n                </li>\n              ))\n          )}\n        </ul>\n      </Label>\n      <Label>\n        <h3>Predefined Holidays</h3>\n        <ul>\n          {holidays\n            .filter((a) => a.type !== \"Custom\")\n            .sort((a, b) => holidayOrder.indexOf(a.label) - holidayOrder.indexOf(b.label))\n            .map((holiday, i) => (\n              <li key={holiday.index}>\n                <Holiday\n                  key={holiday.index}\n                  path={`configuration.holidays.${holiday.index}`}\n                  unit={unit}\n                  editing={editing}\n                  holiday={holiday}\n                  handleChange={handleChange}\n                />\n              </li>\n            ))}\n        </ul>\n      </Label>\n      <Alert\n        intent={Intent.DANGER}\n        isOpen={deleting !== undefined}\n        confirmButtonText=\"Yes\"\n        cancelButtonText=\"Cancel\"\n        onConfirm={() => dispatch(deleteHoliday(deleting?.id ?? -1))}\n        onClose={() => setDeleting(undefined)}\n      >\n        <p>Permanently delete the holiday {deleting?.label}?</p>\n      </Alert>\n    </>\n  );\n}\n","import { Button, InputGroup, Intent, Label } from \"@blueprintjs/core\";\n\nimport { IOccupancy } from \"controllers/occupancies/action\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport moment from \"moment\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Occupancy(props: {\n  path: string;\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  occupancy: DeepPartial<IOccupancy>;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { path, editing, occupancy, handleChange } = props;\n  const { id, label, date, schedule } = occupancy;\n\n  const suffix = schedule?.label;\n  const desc = `${moment(date).format(\"dddd MMMM Do YYYY\")} ${suffix && `(${suffix})`}`;\n  const disable = moment(date).startOf(\"day\").isBefore(moment().startOf(\"day\"), \"day\");\n\n  return (\n    <>\n      <div className=\"row\">\n        <div>\n          <Label disabled={disable}>\n            <b>{label}</b>\n            <InputGroup type=\"text\" value={desc} disabled={disable} readOnly />\n          </Label>\n        </div>\n        <div>\n          <Button\n            icon={IconNames.TRASH}\n            intent={Intent.WARNING}\n            minimal\n            onClick={() => {\n              handleChange(path, editing)({ id: id, action: \"delete\" });\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  HandleInteractionKind,\n  HandleType,\n  InputGroup,\n  Intent,\n  Label,\n  MultiSlider,\n} from \"@blueprintjs/core\";\nimport {\n  END_TIME_DEFAULT,\n  END_TIME_MAX,\n  START_TIME_DEFAULT,\n  START_TIME_MIN,\n  TIME_PADDING,\n  createScheduleLabel,\n  toDataFormat,\n  toMinutes,\n  toTimeFormat,\n} from \"routes/Schedule/util\";\nimport { IOccupancy, deleteOccupancy } from \"controllers/occupancies/action\";\nimport { clamp, clone, cloneDeep, get, inRange, isEmpty, merge } from \"lodash\";\nimport { useCallback, useState } from \"react\";\n\nimport { DatePicker } from \"@blueprintjs/datetime\";\nimport { ISchedule } from \"controllers/schedules/action\";\nimport { IUnit } from \"controllers/units/action\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { Occupancy } from \"./Occupancy\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport moment from \"moment\";\nimport { parseBoolean } from \"utils/utils\";\nimport { useDispatch } from \"react-redux\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst allowUnoccupied = parseBoolean(process.env.REACT_APP_ALLOW_UNOCCUPIED || \"\");\n\nconst defaultSchedule: ISchedule = {\n  label: \"\",\n  occupied: true,\n  startTime: toDataFormat(START_TIME_DEFAULT),\n  endTime: toDataFormat(END_TIME_DEFAULT),\n};\ndefaultSchedule.label = createScheduleLabel(\"all\", defaultSchedule);\n\nfunction CreateOccupancy(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { unit, editing, handleChange } = props;\n\n  const [label, setLabel] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [schedule, setSchedule] = useState(clone(defaultSchedule));\n  const [open, setOpen] = useState(false);\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  const day = moment(date).format(\"dddd\").toLowerCase();\n  const values = {\n    schedule: {\n      start: !schedule.occupied ? START_TIME_MIN : toMinutes(schedule.startTime, false),\n      end: !schedule.occupied ? END_TIME_MAX : toMinutes(schedule.endTime, true),\n    },\n    previous: {\n      start: !getValue(`configuration.${day}Schedule.occupied`)\n        ? START_TIME_MIN\n        : toMinutes(getValue(`configuration.${day}Schedule.startTime`), false),\n      end: !getValue(`configuration.${day}Schedule.occupied`)\n        ? END_TIME_MAX\n        : toMinutes(getValue(`configuration.${day}Schedule.endTime`), true),\n      occupied: getValue(`configuration.${day}Schedule.occupied`),\n    },\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"label\">\n        <Label>\n          <b>Occupancy Label</b>\n          <InputGroup type=\"text\" value={label} onChange={(e) => setLabel(e.target.value)} />\n        </Label>\n      </div>\n      <div className=\"row\">\n        <div className=\"label\">\n          <Label>\n            <b>Occupancy Schedule</b>\n            <InputGroup type=\"text\" value={schedule.label} readOnly />\n          </Label>\n        </div>\n        <div className=\"occupancy\">\n          <MultiSlider\n            min={START_TIME_MIN}\n            max={END_TIME_MAX}\n            stepSize={5}\n            labelStepSize={240}\n            labelRenderer={(v, o) =>\n              o?.isHandleTooltip || (v > START_TIME_MIN && v < END_TIME_MAX) ? toTimeFormat(v) : \"\"\n            }\n            disabled={!schedule.occupied}\n          >\n            <MultiSlider.Handle\n              type={HandleType.START}\n              interactionKind={HandleInteractionKind.LOCK}\n              intentAfter={!schedule.occupied ? Intent.NONE : Intent.SUCCESS}\n              value={values.schedule.start}\n              onChange={(v) => {\n                const copy = cloneDeep(schedule);\n                const occupied = schedule.occupied;\n                const endTime = toMinutes(schedule.endTime, true);\n                const startTime = clamp(v, START_TIME_MIN, Math.min(endTime, END_TIME_MAX) - TIME_PADDING);\n                const label = createScheduleLabel(\"all\", {\n                  occupied,\n                  startTime,\n                  endTime,\n                });\n                merge(copy, {\n                  startTime: toDataFormat(startTime),\n                  label,\n                });\n                setSchedule(copy);\n              }}\n            />\n            <MultiSlider.Handle\n              type={HandleType.START}\n              interactionKind={HandleInteractionKind.NONE}\n              intentAfter={\n                !values.previous.occupied\n                  ? Intent.NONE\n                  : inRange(values.previous.start, values.schedule.start, values.schedule.end)\n                  ? Intent.SUCCESS\n                  : Intent.PRIMARY\n              }\n              value={values.previous.start}\n            />\n            <MultiSlider.Handle\n              type={HandleType.END}\n              interactionKind={HandleInteractionKind.NONE}\n              intentBefore={\n                !values.previous.occupied\n                  ? Intent.NONE\n                  : inRange(values.previous.end, values.schedule.start, values.schedule.end)\n                  ? Intent.SUCCESS\n                  : Intent.PRIMARY\n              }\n              value={values.previous.end}\n            />\n            <MultiSlider.Handle\n              type={HandleType.END}\n              interactionKind={HandleInteractionKind.LOCK}\n              intentBefore={!schedule.occupied ? Intent.NONE : Intent.SUCCESS}\n              value={values.schedule.end}\n              onChange={(v) => {\n                const copy = cloneDeep(schedule);\n                const occupied = schedule.occupied;\n                const startTime = toMinutes(schedule.startTime, false);\n                const endTime = clamp(v, Math.max(startTime, START_TIME_MIN) + TIME_PADDING, END_TIME_MAX);\n                const label = createScheduleLabel(\"all\", {\n                  occupied,\n                  startTime,\n                  endTime,\n                });\n                merge(copy, {\n                  endTime: toDataFormat(endTime),\n                  label,\n                });\n                setSchedule(copy);\n              }}\n            />\n          </MultiSlider>\n        </div>\n        {allowUnoccupied ? (\n          <div className=\"unoccupied\">\n            <Checkbox\n              label=\"Unoccupied\"\n              checked={!schedule.occupied}\n              onClick={() => {\n                const copy = cloneDeep(schedule);\n                const occupied = !schedule.occupied;\n                const startTime = toMinutes(schedule.startTime, false);\n                const endTime = toMinutes(schedule.endTime, true);\n                const label = createScheduleLabel(\"all\", { occupied, startTime, endTime });\n                merge(copy, {\n                  occupied,\n                  label,\n                });\n                setSchedule(copy);\n              }}\n            />\n          </div>\n        ) : <div />}\n      </div>\n      <div>\n        <Label>\n          <b>Date</b>\n          <Popover2\n            content={\n              <DatePicker\n                value={date}\n                onChange={(d, u) => {\n                  if (d) {\n                    setDate(d);\n                  }\n                  setOpen(!u);\n                }}\n              />\n            }\n            isOpen={open}\n            placement=\"bottom-start\"\n          >\n            <Button rightIcon={IconNames.CALENDAR} onClick={() => setOpen(true)} minimal>\n              {moment(date).format(\"dddd MMMM Do YYYY\")}\n            </Button>\n          </Popover2>\n        </Label>\n      </div>\n      <div>\n        <Button\n          icon={IconNames.NEW_LAYER}\n          intent={Intent.PRIMARY}\n          minimal\n          onClick={() => {\n            const i = Math.max(\n              get(unit, \"configuration.occupancies.length\", 0),\n              get(editing, \"configuration.occupancies.length\", 0)\n            );\n            handleChange(\n              `configuration.occupancies.${i}`,\n              editing\n            )({\n              label: label,\n              date: date.toISOString(),\n              schedule: schedule,\n              configurationId: unit?.configuration?.id,\n              createdAt: moment().format(),\n              action: \"create\",\n            } as IOccupancy);\n            setLabel(\"\");\n            setDate(new Date());\n            setSchedule(clone(defaultSchedule));\n          }}\n        >\n          Create Occupancy\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport function Occupancies(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { unit, editing, handleChange } = props;\n\n  const dispatch = useDispatch();\n  const [deleting, setDeleting] = useState(undefined as DeepPartial<IOccupancy> | undefined);\n\n  const occupancies = merge(\n    [],\n    unit.configuration?.occupancies,\n    get(editing, \"configuration.occupancies\")\n  ) as (IOccupancy & {\n    index: number;\n  })[];\n  occupancies.forEach((h, i) => (h.index = i));\n  return (\n    <>\n      <Label>\n        <h3>Create Occupancy</h3>\n        <CreateOccupancy unit={unit} editing={editing} handleChange={handleChange} />\n      </Label>\n      <Label>\n        <h3>Temporary Occupancies</h3>\n        <ul>\n          {isEmpty(occupancies.filter((a) => a.action !== \"delete\")) ? (\n            <li key={\"empty\"}>No Temporary Occupancies Defined</li>\n          ) : (\n            occupancies\n              .filter((a) => a.action !== \"delete\")\n              .sort((a, b) => moment(b.date).valueOf() - moment(a.date).valueOf())\n              .map((occupancy, i) => (\n                <li key={occupancy.index}>\n                  <Occupancy\n                    key={occupancy.index}\n                    path={`configuration.occupancies.${occupancy.index}`}\n                    unit={unit}\n                    editing={editing}\n                    occupancy={occupancy}\n                    handleChange={handleChange}\n                  />\n                </li>\n              ))\n          )}\n        </ul>\n      </Label>\n      <Alert\n        intent={Intent.DANGER}\n        isOpen={deleting !== undefined}\n        confirmButtonText=\"Yes\"\n        cancelButtonText=\"Cancel\"\n        onConfirm={() => dispatch(deleteOccupancy(deleting?.id ?? -1))}\n        onClose={() => setDeleting(undefined)}\n      >\n        <p>Permanently delete the occupancy {deleting?.label}?</p>\n      </Alert>\n    </>\n  );\n}\n","import { Checkbox, InputGroup, Intent, Label, NumberRange, RangeSlider } from \"@blueprintjs/core\";\nimport {\n  END_TIME_MAX,\n  START_TIME_MIN,\n  TIME_PADDING,\n  createScheduleLabel,\n  toDataFormat,\n  toMinutes,\n  toTimeFormat,\n} from \"routes/Schedule/util\";\nimport { clamp, get } from \"lodash\";\n\nimport { IUnit } from \"controllers/units/action\";\nimport { useCallback } from \"react\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Schedule(props: {\n  title: string;\n  path: string;\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n  readOnly?: Array<\"title\">;\n}) {\n  const { title, path, unit, editing, handleChange, readOnly = [\"title\"] } = props;\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  return (\n    <div className=\"row\">\n    <h3> </h3>\n      <div className=\"label\">\n        <Label>\n          <b>{title}</b>\n          <InputGroup\n            type=\"text\"\n            value={getValue(`${path}.label`)}\n            onChange={(e) => {\n              handleChange(`${path}.label`, editing)(e.target.value);\n            }}\n            readOnly={readOnly?.includes(\"title\")}\n          />\n        </Label>\n      </div>\n      <div className=\"schedule\">\n        <RangeSlider\n          min={START_TIME_MIN}\n          max={END_TIME_MAX}\n          stepSize={5}\n          labelStepSize={240}\n          intent={Intent.SUCCESS}\n          value={\n            getValue(`${path}.occupied`)\n              ? [toMinutes(getValue(`${path}.startTime`), false), toMinutes(getValue(`${path}.endTime`), true)]\n              : [START_TIME_MIN, START_TIME_MIN]\n          }\n          labelRenderer={(v, o) =>\n            o?.isHandleTooltip || (v > START_TIME_MIN && v < END_TIME_MAX) ? toTimeFormat(v) : \"\"\n          }\n          disabled={!get(editing, `${path}.occupied`, get(unit, `${path}.occupied`))}\n          onChange={(v) => {\n            const occupied = getValue(`${path}.occupied`);\n            const startTime = clamp(\n              (v as NumberRange)[0],\n              START_TIME_MIN,\n              Math.min((v as NumberRange)[1], END_TIME_MAX) - TIME_PADDING\n            );\n            const endTime = clamp(\n              (v as NumberRange)[1],\n              Math.max((v as NumberRange)[0], START_TIME_MIN) + TIME_PADDING,\n              END_TIME_MAX\n            );\n            const label = createScheduleLabel(\"all\", { occupied, startTime, endTime });\n            handleChange(\n              `${path}`,\n              editing\n            )({ startTime: toDataFormat(startTime), endTime: toDataFormat(endTime), label });\n          }}\n        />\n      </div>\n      <div className=\"unoccupied\">\n        <Checkbox\n          label=\"Unoccupied\"\n          checked={!getValue(`${path}.occupied`)}\n          onClick={() => {\n            const occupied = !getValue(`${path}.occupied`);\n            const startTime = toMinutes(getValue(`${path}.startTime`), false);\n            const endTime = toMinutes(getValue(`${path}.endTime`), true);\n            const label = createScheduleLabel(\"all\", { occupied, startTime, endTime });\n            handleChange(`${path}`, editing)({ occupied, label });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import { IUnit } from \"controllers/units/action\";\nimport { Schedule } from \"./Schedule\";\nimport { parseBoolean } from \"utils/utils\";\nimport { DeepPartial } from \"../../utils/types\";\n\nconst holidaySchedule = parseBoolean(process.env.REACT_APP_HOLIDAY_SCHEDULE ?? \"\");\n\nexport function Schedules(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { unit, editing, handleChange } = props;\n  return (\n    <>\n      <Schedule\n        title=\"Monday Schedule\"\n        path=\"configuration.mondaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Tuesday Schedule\"\n        path=\"configuration.tuesdaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Wednesday Schedule\"\n        path=\"configuration.wednesdaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Thursday Schedule\"\n        path=\"configuration.thursdaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Friday Schedule\"\n        path=\"configuration.fridaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Saturday Schedule\"\n        path=\"configuration.saturdaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      <Schedule\n        title=\"Sunday Schedule\"\n        path=\"configuration.sundaySchedule\"\n        unit={unit}\n        editing={editing}\n        handleChange={handleChange}\n      />\n      {holidaySchedule && (\n        <Schedule\n          title=\"Holiday Schedule\"\n          path=\"configuration.holidaySchedule\"\n          unit={unit}\n          editing={editing}\n          handleChange={handleChange}\n        />\n      )}\n    </>\n  );\n}\n","import {\n  COOLING_MAX,\n  DEADBAND_MAX,\n  DEADBAND_MIN,\n  HEATING_MIN,\n  SETPOINT_MAX,\n  SETPOINT_MIN,\n  SETPOINT_PADDING,\n  createSetpointLabel,\n  getSetpointMessage,\n} from \"routes/Setpoint/util\";\nimport {\n  HandleInteractionKind,\n  HandleType,\n  InputGroup,\n  Intent,\n  Label,\n  MultiSlider,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { clamp, get, merge } from \"lodash\";\nimport { useCallback, useMemo } from \"react\";\n\nimport { ISetpoint } from \"controllers/setpoints/action\";\nimport { IUnit } from \"controllers/units/action\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Setpoint(props: {\n  type: \"single\" | \"separate\" | \"both\";\n  title: string;\n  path: string;\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  setpoint: DeepPartial<ISetpoint> | undefined;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n  readOnly?: Array<\"title\">;\n}) {\n  const { type, title, path, unit, editing, setpoint, handleChange, readOnly = [\"title\"] } = props;\n\n  const getValue = useCallback((field: string) => get(editing, field, get(unit, field)), [editing, unit]);\n\n  const error = useMemo(\n    () => getSetpointMessage(merge({}, get(unit, path), setpoint)) || \"\\u00A0\",\n    [path, unit, setpoint]\n  );\n\n  const renderSingle = () => (\n    <MultiSlider\n      min={SETPOINT_MIN}\n      max={SETPOINT_MAX}\n      stepSize={0.5}\n      labelStepSize={5}\n      labelRenderer={(v, o) => (o?.isHandleTooltip || (v > HEATING_MIN && v < COOLING_MAX) ? `${v}º\\xa0F` : \"\")}\n    >\n      <MultiSlider.Handle\n        type={HandleType.START}\n        interactionKind={HandleInteractionKind.LOCK}\n        intentAfter={Intent.WARNING}\n        value={getValue(`${path}.heating`)}\n        onChange={(v) => {\n          const setpoint = getValue(`${path}.setpoint`);\n          const deadband = getValue(`${path}.deadband`);\n          const padding = SETPOINT_PADDING + deadband / 2;\n          const heating = clamp(v, HEATING_MIN, setpoint - padding);\n          const cooling = getValue(`${path}.cooling`);\n          const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n          handleChange(`${path}`, editing)({ heating, label });\n        }}\n      />\n      <MultiSlider.Handle\n        type={HandleType.START}\n        interactionKind={HandleInteractionKind.LOCK}\n        intentAfter={Intent.NONE}\n        value={getValue(`${path}.setpoint`) - getValue(`${path}.deadband`) / 2}\n        onChange={(v) => {\n          const deadband = getValue(`${path}.deadband`);\n          const padding = SETPOINT_PADDING + deadband / 2;\n          const heating = getValue(`${path}.heating`);\n          const cooling = getValue(`${path}.cooling`);\n          const value = v + deadband / 2;\n          const setpoint = clamp(value, heating + padding, cooling - padding);\n          const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n          handleChange(`${path}`, editing)({ setpoint, label });\n        }}\n      />\n      <MultiSlider.Handle\n        type={HandleType.END}\n        interactionKind={HandleInteractionKind.LOCK}\n        intentBefore={Intent.NONE}\n        value={getValue(`${path}.setpoint`) + getValue(`${path}.deadband`) / 2}\n        onChange={(v) => {\n          const deadband = getValue(`${path}.deadband`);\n          const padding = SETPOINT_PADDING + deadband / 2;\n          const heating = getValue(`${path}.heating`);\n          const cooling = getValue(`${path}.cooling`);\n          const value = v - deadband / 2;\n          const setpoint = clamp(value, heating + padding, cooling - padding);\n          const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n          handleChange(`${path}`, editing)({ setpoint, label });\n        }}\n      />\n      <MultiSlider.Handle\n        type={HandleType.END}\n        interactionKind={HandleInteractionKind.LOCK}\n        intentBefore={Intent.PRIMARY}\n        value={getValue(`${path}.cooling`)}\n        onChange={(v) => {\n          const setpoint = getValue(`${path}.setpoint`);\n          const deadband = getValue(`${path}.deadband`);\n          const padding = SETPOINT_PADDING + deadband / 2;\n          const heating = getValue(`${path}.heating`);\n          const cooling = clamp(v, setpoint + padding, COOLING_MAX);\n          const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n          handleChange(`${path}`, editing)({ cooling, label });\n        }}\n      />\n    </MultiSlider>\n  );\n\n  const renderOccupied = () => (\n    <Label>\n      <b>Occupied</b>\n      <MultiSlider\n        min={SETPOINT_MIN}\n        max={SETPOINT_MAX}\n        stepSize={0.5}\n        labelStepSize={5}\n        intent={Intent.SUCCESS}\n        labelRenderer={(v, o) => (o?.isHandleTooltip || (v > HEATING_MIN && v < COOLING_MAX) ? `${v}º\\xa0F` : \"\")}\n      >\n        <MultiSlider.Handle\n          type={HandleType.START}\n          interactionKind={HandleInteractionKind.LOCK}\n          intentBefore={Intent.WARNING}\n          intentAfter={Intent.SUCCESS}\n          value={getValue(`${path}.setpoint`) - getValue(`${path}.deadband`) / 2}\n          onChange={(v) => {\n            const deadband = getValue(`${path}.deadband`);\n            const padding = SETPOINT_PADDING + deadband / 2;\n            const heating = getValue(`${path}.heating`);\n            const cooling = getValue(`${path}.cooling`);\n            const value = v + deadband / 2;\n            const setpoint = clamp(value, heating + padding, cooling - padding);\n            const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n            handleChange(`${path}`, editing)({ setpoint, label });\n          }}\n        />\n        <MultiSlider.Handle\n          type={HandleType.END}\n          interactionKind={HandleInteractionKind.LOCK}\n          intentBefore={Intent.SUCCESS}\n          intentAfter={Intent.PRIMARY}\n          value={getValue(`${path}.setpoint`) + getValue(`${path}.deadband`) / 2}\n          onChange={(v) => {\n            const deadband = getValue(`${path}.deadband`);\n            const padding = SETPOINT_PADDING + deadband / 2;\n            const heating = getValue(`${path}.heating`);\n            const cooling = getValue(`${path}.cooling`);\n            const value = v - deadband / 2;\n            const setpoint = clamp(value, heating + padding, cooling - padding);\n            const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n            handleChange(`${path}`, editing)({ setpoint, label });\n          }}\n        />\n      </MultiSlider>\n    </Label>\n  );\n\n  const renderUnoccupied = () => (\n    <Label>\n      <b>Unoccupied</b>\n      <MultiSlider\n        min={SETPOINT_MIN}\n        max={SETPOINT_MAX}\n        stepSize={0.5}\n        labelStepSize={5}\n        labelRenderer={(v, o) => (o?.isHandleTooltip || (v > HEATING_MIN && v < COOLING_MAX) ? `${v}º\\xa0F` : \"\")}\n      >\n        <MultiSlider.Handle\n          type={HandleType.START}\n          interactionKind={HandleInteractionKind.LOCK}\n          intentBefore={Intent.WARNING}\n          value={getValue(`${path}.heating`)}\n          onChange={(v) => {\n            const setpoint = getValue(`${path}.setpoint`);\n            const deadband = getValue(`${path}.deadband`);\n            const padding = SETPOINT_PADDING + deadband / 2;\n            const heating = clamp(v, HEATING_MIN, setpoint - padding);\n            const cooling = getValue(`${path}.cooling`);\n            const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n            handleChange(`${path}`, editing)({ heating, label });\n          }}\n        />\n        <MultiSlider.Handle\n          type={HandleType.END}\n          interactionKind={HandleInteractionKind.LOCK}\n          intentAfter={Intent.PRIMARY}\n          value={getValue(`${path}.cooling`)}\n          onChange={(v) => {\n            const setpoint = getValue(`${path}.setpoint`);\n            const deadband = getValue(`${path}.deadband`);\n            const padding = SETPOINT_PADDING + deadband / 2;\n            const heating = getValue(`${path}.heating`);\n            const cooling = clamp(v, setpoint + padding, COOLING_MAX);\n            const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n            handleChange(`${path}`, editing)({ cooling, label });\n          }}\n        />\n      </MultiSlider>\n    </Label>\n  );\n\n  const renderSliders = () => {\n    switch (type) {\n      case \"both\":\n        return (\n          <div className=\"row\">\n            <div className=\"setpoint\">{renderSingle()}</div>\n            <div className=\"break\" />\n            <div className=\"setpoint\">{renderOccupied()}</div>\n            <div className=\"break\" />\n            <div className=\"setpoint\">{renderUnoccupied()}</div>\n            <div className=\"break\" />\n            <div />\n          </div>\n        );\n      case \"single\":\n        return (\n          <div className=\"row\">\n            <div className=\"setpoint\">{renderSingle()}</div>\n            <div className=\"break\" />\n            <div />\n          </div>\n        );\n      case \"separate\":\n      default:\n        return (\n          <div className=\"row\">\n            <div className=\"setpoint\">{renderOccupied()}</div>\n            <div className=\"break\" />\n            <div className=\"setpoint\">{renderUnoccupied()}</div>\n            <div className=\"break\" />\n            <div />\n          </div>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <h3> </h3>\n        <div className=\"label\">\n          <Label>\n            <b>{title}</b>\n            <InputGroup\n              type=\"text\"\n              value={getValue(`${path}.label`)}\n              onChange={(e) => {\n                handleChange(`${path}.label`, editing)(e.target.value);\n              }}\n              readOnly={readOnly?.includes(\"title\")}\n            />\n          </Label>\n        </div>\n        <div className=\"deadband\">\n          <Label>\n            <b>Deadband</b>\n            <NumericInput\n              step={1}\n              min={DEADBAND_MIN}\n              max={DEADBAND_MAX}\n              value={getValue(`${path}.deadband`)}\n              onValueChange={(v) => {\n                const setpoint = getValue(`${path}.setpoint`);\n                const deadband = v;\n                const heating = getValue(`${path}.heating`);\n                const cooling = getValue(`${path}.cooling`);\n                const label = createSetpointLabel(\"all\", { setpoint, deadband, heating, cooling });\n                handleChange(`${path}`, editing)({ deadband, label });\n              }}\n            />\n          </Label>\n        </div>\n        <div className=\"error\">\n          <h4>{error}</h4>\n        </div>\n        <div></div>\n      </div>\n      {renderSliders()}\n    </>\n  );\n}\n","import { IUnit } from \"controllers/units/action\";\nimport { Setpoint } from \"./Setpoint\";\nimport { get } from \"lodash\";\nimport { DeepPartial } from \"../../utils/types\";\n\nexport function Setpoints(props: {\n  unit: IUnit;\n  editing: DeepPartial<IUnit> | null;\n  handleChange: (field: string, unit?: DeepPartial<IUnit> | null) => (value: any) => void;\n}) {\n  const { unit, editing, handleChange } = props;\n  return (\n    <Setpoint\n      type=\"separate\"\n      title=\"Setpoints\"\n      path=\"configuration.setpoint\"\n      unit={unit}\n      editing={editing}\n      setpoint={get(editing, \"configuration.setpoint\")}\n      handleChange={handleChange}\n    />\n  );\n}\n","import \"./style.scss\";\n\nimport { Alert, Button, Card, Collapse, InputGroup, Intent, Label, Position, Tree } from \"@blueprintjs/core\";\nimport { Header, Prompt } from \"components\";\nimport {\n  IConfiguration,\n  createConfiguration,\n  deleteConfiguration,\n  readConfigurations,\n  readConfigurationsPoll,\n  selectReadConfigurations,\n  updateConfiguration,\n} from \"controllers/configurations/action\";\nimport {\n  IFilter,\n  IUnit,\n  filterUnits,\n  readUnits,\n  readUnitsPoll,\n  selectFilterUnits,\n  selectReadUnits,\n  updateUnit,\n} from \"controllers/units/action\";\nimport { IconName, IconNames } from \"@blueprintjs/icons\";\nimport { cloneDeep, get, isEqual, isNil, isObject, merge, set } from \"lodash\";\n\nimport { Configuration } from \"./Configuration\";\nimport { Holidays } from \"./Holidays\";\nimport { Occupancies } from \"./Occupancies\";\nimport React from \"react\";\nimport { RootProps } from \"routes\";\nimport { Schedules } from \"./Schedules\";\nimport { Setpoints } from \"./Setpoints\";\nimport { StageType } from \"common\";\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\nimport { Unit } from \"./Unit\";\nimport { connect } from \"react-redux\";\nimport { createConfigurationDefault } from \"routes/Configuration/util\";\nimport { defaultPollInterval } from \"controllers/poll/action\";\nimport { isSetpointValid } from \"routes/Setpoint/util\";\nimport { DeepPartial } from \"../../utils/types\";\n\ninterface UnitsProps extends RootProps {\n  readUnits: () => void;\n  readUnitsPoll: (payload?: number) => void;\n  filterUnits: (payload: IFilter) => void;\n  updateUnit: (payload: DeepPartial<IUnit>) => void;\n  units?: IUnit[];\n  filtered?: IUnit[];\n  readConfigurations: () => void;\n  readConfigurationsPoll: (payload?: number) => void;\n  createConfiguration: (payload: DeepPartial<IConfiguration>) => void;\n  updateConfiguration: (payload: DeepPartial<IConfiguration>) => void;\n  deleteConfiguration: (payload: number) => void;\n  configurations?: IConfiguration[];\n}\n\ninterface UnitsState {\n  editing: DeepPartial<IUnit> | null;\n  expanded: string | null;\n  confirm: (() => void) | null;\n}\n\nclass Units extends React.Component<UnitsProps, UnitsState> {\n  constructor(props: UnitsProps) {\n    super(props);\n    this.state = {\n      editing: null,\n      expanded: null,\n      confirm: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.readUnits();\n    this.props.readConfigurations();\n    this.props.readUnitsPoll(defaultPollInterval);\n    this.props.readConfigurationsPoll(defaultPollInterval);\n  }\n\n  componentWillUnmount() {\n    this.props.readUnitsPoll();\n    this.props.readConfigurationsPoll();\n  }\n\n  getValue = (field: string, editing?: DeepPartial<IUnit> | null, unit?: DeepPartial<IUnit> | null) => {\n    const { units } = this.props;\n    const temp = unit ? unit : units?.find((v) => v.id === editing?.id);\n    return get(editing, field, get(temp, field));\n  };\n\n  handleChange = (field: string, editing?: DeepPartial<IUnit> | null) => {\n    return (value: any) => {\n      const doDefault = (value: any) => {\n        if (editing) {\n          if (isObject(this.getValue(field, editing))) {\n            set(editing, field, merge(cloneDeep(get(editing, field)), value));\n          } else {\n            set(editing, field, value);\n          }\n          if (field.split(\".\").pop() === \"heatPump\" && value === false) {\n            const economizer = field.replace(\"heatPump\", \"economizer\");\n            if (isObject(this.getValue(economizer, editing))) {\n              set(editing, economizer, merge(cloneDeep(get(editing, economizer)), false));\n            } else {\n              set(editing, economizer, false);\n            }\n          }\n          this.setState({ editing });\n        }\n      };\n      switch (field) {\n        case \"configurationId\":\n          this.props.updateUnit({ id: editing?.id, configurationId: value as number });\n          break;\n        default:\n          doDefault(value);\n      }\n    };\n  };\n\n  handleCreate = (unit: DeepPartial<IUnit>) => {\n    const configuration = createConfigurationDefault();\n    configuration.unitId = unit.id;\n    this.props.createConfiguration(configuration);\n    this.setState({\n      editing: null,\n      expanded: null,\n    });\n  };\n\n  handleEdit = (unit: IUnit) => {\n    const { filtered } = this.props;\n    const { editing } = this.state;\n    const current = editing && filtered?.find((v) => v.id === editing.id);\n    if (current && this.isSave(current)) {\n      this.setState({ confirm: () => this.setState({ editing: { id: unit.id } }) });\n    } else {\n      this.setState({ editing: { id: unit.id } });\n    }\n  };\n\n  handleCancel = () => {\n    const { filtered } = this.props;\n    const { editing } = this.state;\n    const current = editing && filtered?.find((v) => v.id === editing.id);\n    if (current && this.isSave(current)) {\n      this.setState({ confirm: () => this.setState({ editing: null, expanded: null }) });\n    } else {\n      this.setState({ editing: null, expanded: null });\n    }\n  };\n\n  handleConfirm = () => {\n    const { confirm } = this.state;\n    this.setState({ confirm: null }, confirm ?? undefined);\n  };\n\n  handleSave = () => {\n    const { editing } = this.state;\n    if (editing) {\n      this.props.updateUnit(editing);\n    }\n  };\n\n  handleDelete = (configuration: DeepPartial<IConfiguration>) => {\n    const { id } = configuration;\n    if (id !== undefined) {\n      this.props.deleteConfiguration(id);\n    }\n  };\n\n  handlePush = (unit: DeepPartial<IUnit>) => {\n    const { id } = unit;\n    if (id !== undefined) {\n      this.props.updateUnit({ id, stage: StageType.UpdateType.label });\n    }\n  };\n\n  isSave = (unit: IUnit) => {\n    const { editing } = this.state;\n    const temp = merge({}, unit, editing);\n    const valid = isSetpointValid(temp.configuration?.setpoint);\n    return valid && !isEqual(unit, temp);\n  };\n\n  isPush = (unit: IUnit) => {\n    switch (unit.stage) {\n      case StageType.UpdateType.label:\n      case StageType.DeleteType.label:\n      case StageType.ProcessType.label:\n        return false;\n      case StageType.CreateType.label:\n      case StageType.CompleteType.label:\n      case StageType.FailType.label:\n      default:\n        return !this.isSave(unit);\n    }\n  };\n\n  renderStatus(unit: IUnit) {\n    let icon: IconName = IconNames.ISSUE;\n    let intent: Intent = Intent.WARNING;\n    let message: string = \"Push Unit Configuration\";\n    switch (unit.stage) {\n      case StageType.UpdateType.label:\n        icon = IconNames.REFRESH;\n        intent = Intent.PRIMARY;\n        break;\n      case StageType.ProcessType.label:\n        icon = IconNames.REFRESH;\n        intent = Intent.SUCCESS;\n        break;\n      case StageType.CreateType.label:\n        icon = IconNames.ISSUE;\n        intent = Intent.WARNING;\n        break;\n      case StageType.DeleteType.label:\n        icon = IconNames.DELETE;\n        intent = Intent.DANGER;\n        break;\n      case StageType.CompleteType.label:\n        icon = IconNames.CONFIRM;\n        intent = Intent.SUCCESS;\n        break;\n      case StageType.FailType.label:\n        icon = IconNames.ERROR;\n        intent = Intent.DANGER;\n        break;\n      default:\n    }\n    return (\n      <Tooltip2 content={message} placement={Position.TOP} disabled={!this.isPush(unit)}>\n        <Button\n          icon={icon}\n          intent={intent}\n          minimal\n          onClick={() => this.handlePush(unit)}\n          disabled={!this.isPush(unit)}\n        />\n      </Tooltip2>\n    );\n  }\n\n  renderConfirm() {\n    const { confirm } = this.state;\n    if (confirm === null) {\n      return null;\n    }\n    return (\n      <Alert\n        intent={Intent.DANGER}\n        isOpen={true}\n        confirmButtonText=\"Yes\"\n        cancelButtonText=\"Cancel\"\n        onConfirm={() => this.handleConfirm()}\n        onClose={() => this.setState({ confirm: null })}\n      >\n        <p>There are changes which have not been saved. Do you still want to continue?</p>\n      </Alert>\n    );\n  }\n\n  renderPrompt() {\n    const { filtered } = this.props;\n    const { editing } = this.state;\n    const current = editing && filtered?.find((v) => v.id === editing.id);\n    const prompt = !isNil(current) && this.isSave(current);\n    return (\n      <Prompt when={prompt} message=\"There are changes which have not been saved. Do you still want to continue?\" />\n    );\n  }\n\n  render() {\n    const { filtered, configurations } = this.props;\n    const { editing, expanded } = this.state;\n    return (\n      <div className={\"units\"}>\n        {this.renderPrompt()}\n        <Header {...this.props} />\n        <h1>Units</h1>\n        <div className=\"list\">\n          {filtered?.map((unit, i) => {\n            return unit.id === editing?.id ? (\n              <Card key={unit.id ?? i} interactive>\n                <div className=\"row\">\n                  <div>\n                    <Label>\n                      <h3>{unit.label}</h3>\n                    </Label>\n                  </div>\n                  <div>\n                    {this.renderStatus(unit)}\n                    <Tooltip2 content=\"Save\" placement={Position.TOP} disabled={!this.isSave(unit)}>\n                      <Button\n                        icon={IconNames.FLOPPY_DISK}\n                        intent={Intent.PRIMARY}\n                        minimal\n                        onClick={() => this.handleSave()}\n                        disabled={!this.isSave(unit)}\n                      />\n                    </Tooltip2>\n                    <Tooltip2 content=\"Exit\" placement={Position.TOP}>\n                      <Button\n                        icon={IconNames.CROSS}\n                        intent={Intent.PRIMARY}\n                        minimal\n                        onClick={() => this.handleCancel()}\n                      />\n                    </Tooltip2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div>\n                    <Label>\n                      <b>Campus</b>\n                      <InputGroup type=\"text\" value={unit.campus} readOnly />\n                    </Label>\n                  </div>\n                  <div>\n                    <Label>\n                      <b>Building</b>\n                      <InputGroup type=\"text\" value={unit.building} readOnly />\n                    </Label>\n                  </div>\n                  <div>\n                    <Label>\n                      <b>System</b>\n                      <InputGroup type=\"text\" value={unit.system} readOnly />\n                    </Label>\n                  </div>\n                  <div>\n                    <Label>\n                      <b>Timezone</b>\n                      <InputGroup type=\"text\" value={unit.timezone} readOnly />\n                    </Label>\n                  </div>\n                  <div />\n                </div>\n                <Collapse isOpen={true}>\n                  <Tree\n                    contents={[\n                      {\n                        id: \"configuration\",\n                        label: \"Configuration\",\n                        icon: IconNames.SERIES_CONFIGURATION,\n                        hasCaret: true,\n                        isExpanded: expanded === \"configuration\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"configuration\"}>\n                    <Configuration\n                      unit={unit}\n                      editing={editing}\n                      configurations={configurations}\n                      handleChange={this.handleChange}\n                      handleCreate={this.handleCreate}\n                    />\n                  </Collapse>\n                  <Tree\n                    contents={[\n                      {\n                        id: \"setpoints\",\n                        label: \"Setpoints\",\n                        icon: IconNames.TEMPERATURE,\n                        hasCaret: true,\n                        isExpanded: expanded === \"setpoints\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"setpoints\"}>\n                    <Setpoints unit={unit} editing={editing} handleChange={this.handleChange} />\n                  </Collapse>\n                  <Tree\n                    contents={[\n                      {\n                        id: \"schedules\",\n                        label: \"Occupancy Schedules\",\n                        icon: IconNames.TIME,\n                        hasCaret: true,\n                        isExpanded: expanded === \"schedules\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"schedules\"}>\n                    <Schedules unit={unit} editing={editing} handleChange={this.handleChange} />\n                  </Collapse>\n                  <Tree\n                    contents={[\n                      {\n                        id: \"holidays\",\n                        label: \"Holidays\",\n                        icon: IconNames.TIMELINE_EVENTS,\n                        hasCaret: true,\n                        isExpanded: expanded === \"holidays\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"holidays\"}>\n                    <Holidays unit={unit} editing={editing} handleChange={this.handleChange} />\n                  </Collapse>\n                  <Tree\n                    contents={[\n                      {\n                        id: \"occupancies\",\n                        label: \"Temporary Occupancy\",\n                        icon: IconNames.HOME,\n                        hasCaret: true,\n                        isExpanded: expanded === \"occupancies\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"occupancies\"}>\n                    <Occupancies unit={unit} editing={editing} handleChange={this.handleChange} />\n                  </Collapse>\n                  {/* <Tree\n                    contents={[\n                      {\n                        id: \"lockouts\",\n                        label: \"Lockouts\",\n                        icon: IconNames.LOCK,\n                        hasCaret: true,\n                        isExpanded: expanded === \"lockouts\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"lockouts\"}>\n                    <span>Lockouts Coming Soon</span>\n                  </Collapse> */}\n                  <Tree\n                    contents={[\n                      {\n                        id: \"rtu\",\n                        label: \"RTU Configuration\",\n                        icon: IconNames.COG,\n                        hasCaret: true,\n                        isExpanded: expanded === \"rtu\",\n                      },\n                    ]}\n                    onNodeExpand={(e) => this.setState({ expanded: e.id as string })}\n                    onNodeCollapse={() => this.setState({ expanded: null })}\n                    onNodeClick={(e) => this.setState({ expanded: e.id === expanded ? null : (e.id as string) })}\n                  />\n                  <Collapse isOpen={expanded === \"rtu\"}>\n                    <Unit\n                      unit={unit}\n                      editing={editing}\n                      handleChange={this.handleChange}\n                      hidden={[\n                        \"peakLoadExclude\",\n                        \"zoneLocation\",\n                        \"zoneMass\",\n                        \"zoneOrientation\",\n                        \"zoneBuilding\",\n                        \"coolingCapacity\",\n                        \"compressors\",\n                        \"heatPump\",\n                        \"heatPumpBackup\",\n                        \"setpointPeakOffset\",\n                      ]}\n                    />\n                  </Collapse>\n                </Collapse>\n              </Card>\n            ) : (\n              <Card key={unit.id ?? i} interactive>\n                <div className=\"row\">\n                  <div>\n                    <Label>\n                      <h3>{unit.label}</h3>\n                    </Label>\n                  </div>\n                  <div>\n                    {this.renderStatus(unit)}\n                    <Tooltip2 content=\"Edit\" placement={Position.TOP}>\n                      <Button\n                        icon={IconNames.EDIT}\n                        intent={Intent.PRIMARY}\n                        minimal\n                        onClick={() => this.handleEdit(unit)}\n                      />\n                    </Tooltip2>\n                  </div>\n                </div>\n              </Card>\n            );\n          })}\n          {this.renderConfirm()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  units: selectReadUnits(state),\n  filtered: selectFilterUnits(state),\n  configurations: selectReadConfigurations(state),\n});\n\nconst mapActionToProps = {\n  readUnits,\n  readUnitsPoll,\n  filterUnits,\n  updateUnit,\n  readConfigurations,\n  readConfigurationsPoll,\n  createConfiguration,\n  updateConfiguration,\n  deleteConfiguration,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Units);\n","import RouteBase from \"routes/RouteBase\";\nimport Units from \"./Units\";\n\nconst Root = (props: any) => <RouteBase {...props} renderRoute={(p) => <Units {...p} />} />;\n\nexport default Root;\n"],"names":["createConfigurationLabel","configuration","moment","format","isConfigurationDelete","sum","Object","values","_count","createConfigurationDefault","label","setpoint","SETPOINT_DEFAULT","deadband","DEADBAND_DEFAULT","heating","HEATING_DEFAULT","cooling","COOLING_DEFAULT","createSetpointLabel","schedule","occupied","startTime","toDataFormat","START_TIME_DEFAULT","endTime","END_TIME_DEFAULT","createScheduleLabel","unoccupied","enabled","HolidayType","map","h","name","holidays","type","includes","mondaySchedule","tuesdaySchedule","wednesdaySchedule","thursdaySchedule","fridaySchedule","saturdaySchedule","sundaySchedule","holidaySchedule","TIME_PADDING","START_TIME_MIN","END_TIME_MAX","DATA_FORMAT","TIME_FORMAT","value","add","Math","trunc","toTimeFormat","toMinutes","upper","boundary","toUpperBound","hours","minutes","undefined","isNumber","isScheduleDelete","SETPOINT_PADDING","parseInt","process","DEADBAND_MIN","ValidateType","min","DEADBAND_MAX","max","default","HEATING_MIN","COOLING_MAX","SETPOINT_MIN","SETPOINT_MAX","getSetpointMessage","isSetpointValid","isSetpointDelete","COOLING_CAPACITY_MIN","COOLING_CAPACITY_MAX","COMPRESSORS_MIN","COMPRESSORS_MAX","COOLING_LOCKOUT_MIN","COOLING_LOCKOUT_MAX","OPTIMAL_START_LOCKOUT_MIN","OPTIMAL_START_LOCKOUT_MAX","OPTIMAL_START_DEVIATION_MIN","OPTIMAL_START_DEVIATION_MAX","EARLIEST_START_MIN","EARLIEST_START_MAX","LATEST_START_MIN","LATEST_START_MAX","HEAT_PUMP_BACKUP_MIN","HEAT_PUMP_BACKUP_MAX","HEAT_PUMP_LOCKOUT_MIN","HEAT_PUMP_LOCKOUT_MAX","SETPOINT_PEAK_OFFSET_MIN","SETPOINT_PEAK_OFFSET_MAX","ECONOMIZER_SETPOINT_MIN","ECONOMIZER_SETPOINT_MAX","createUnitLabel","unit","isDelete","Unit","props","hidden","editing","handleChange","useState","temp","setTemp","getValue","useCallback","field","get","renderNumeric","path","element","fractions","step","minorStepSize","onValueChange","v","s","merge","rightElement","clampValueOnBlur","renderTemperature","stepSize","labelStepSize","labelRenderer","o","isHandleTooltip","HandleType","interactionKind","HandleInteractionKind","onChange","renderDuration","renderSelect","transform","content","text","onClick","placement","rightIcon","IconNames","minimal","className","e","target","ZoneType","disabled","Configuration","configurations","handleCreate","id","Holiday","holiday","month","day","observance","suffix","ObservanceType","desc","set","readOnly","icon","intent","Intent","action","checked","holidayOrder","a","CreateHoliday","setLabel","Date","date","setDate","setObservance","open","setOpen","d","u","isOpen","isEmpty","find","i","getMonth","getDate","configurationId","createdAt","Holidays","dispatch","useDispatch","deleting","setDeleting","forEach","index","filter","sort","b","valueOf","indexOf","confirmButtonText","cancelButtonText","onConfirm","deleteHoliday","onClose","Occupancy","occupancy","disable","startOf","isBefore","allowUnoccupied","parseBoolean","defaultSchedule","CreateOccupancy","clone","setSchedule","toLowerCase","start","end","previous","intentAfter","copy","cloneDeep","clamp","inRange","intentBefore","toISOString","Occupancies","occupancies","deleteOccupancy","Schedule","title","Schedules","Setpoint","error","useMemo","renderSingle","padding","renderOccupied","renderUnoccupied","renderSliders","Setpoints","Units","units","updateUnit","isObject","split","pop","economizer","replace","setState","doDefault","unitId","createConfiguration","expanded","handleEdit","filtered","state","current","isSave","confirm","handleCancel","handleConfirm","handleSave","handleDelete","deleteConfiguration","handlePush","stage","StageType","isEqual","isPush","this","readUnits","readConfigurations","readUnitsPoll","defaultPollInterval","readConfigurationsPoll","Position","prompt","isNil","when","message","renderPrompt","interactive","renderStatus","campus","building","system","timezone","contents","hasCaret","isExpanded","onNodeExpand","onNodeCollapse","onNodeClick","renderConfirm","React","mapActionToProps","filterUnits","updateConfiguration","connect","selectReadUnits","selectFilterUnits","selectReadConfigurations","RouteBase","renderRoute","p"],"sourceRoot":""}