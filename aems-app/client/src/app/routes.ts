import { IconNames } from "@blueprintjs/icons";
import { ComponentLocation, Dynamic, DynamicRoute, Route, RouteComponent, StaticRoute } from "./types";
import { deepFreeze, buildTree } from "@local/common";

const hiddenRoutes = (process.env.NEXT_PUBLIC_HIDDEN_ROUTES ?? "").split(/[|:;, ]/);

const components: Partial<Record<ComponentLocation, RouteComponent>> =
  process.env.NODE_ENV !== "test"
    ? {
        [ComponentLocation.NAVBAR_LEFT]: RouteComponent.NAVBAR_LEFT,
        [ComponentLocation.NAVBAR_RIGHT]: RouteComponent.NAVBAR_RIGHT,
        [ComponentLocation.NAVIGATION]: RouteComponent.NAVIGATION,
      }
    : {};

const routes: Readonly<(StaticRoute | DynamicRoute)[]> = [
  {
    id: "home",
    parentId: undefined,
    path: `/`,
    index: true,
    name: "Home",
    icon: IconNames.HOME,
    display: false,
    components: components,
  },
  {
    id: "welcome",
    parentId: "home",
    path: `welcome`,
    name: "Welcome",
    icon: IconNames.HAND,
    display: true,
    components: components,
  },
  {
    id: "info",
    parentId: "home",
    path: `info`,
    name: "Info",
    icon: IconNames.INFO_SIGN,
    display: true,
    components: components,
  },
  {
    id: "demo",
    parentId: "home",
    path: `demo`,
    name: "Demo",
    icon: IconNames.LAB_TEST,
    scope: "user",
    display: false,
    components: components,
  },
  {
    id: "book",
    parentId: "demo",
    path: Dynamic,
    name: "...",
    dynamic: true,
    icon: undefined,
    scope: "user",
    display: false,
    components: components,
  },
  {
    id: "chapter",
    parentId: "book",
    path: Dynamic,
    name: "...",
    dynamic: true,
    icon: undefined,
    scope: "user",
    display: false,
    components: components,
  },
  {
    id: "aems",
    parentId: "home",
    path: `aems`,
    name: "AEMS",
    icon: IconNames.SETTINGS,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "units",
    parentId: "aems",
    path: `units`,
    name: "Units",
    icon: IconNames.COG,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "configurations",
    parentId: "aems",
    path: `configurations`,
    name: "Configurations",
    icon: IconNames.SERIES_CONFIGURATION,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "controls",
    parentId: "aems",
    path: `controls`,
    name: "Controls",
    icon: IconNames.CONTROL,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "holidays",
    parentId: "aems",
    path: `holidays`,
    name: "Holidays",
    icon: IconNames.TIMELINE_EVENTS,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "locations",
    parentId: "aems",
    path: `locations`,
    name: "Locations",
    icon: IconNames.MAP_MARKER,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "occupancies",
    parentId: "aems",
    path: `occupancies`,
    name: "Occupancies",
    icon: IconNames.HOME,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "schedules",
    parentId: "aems",
    path: `schedules`,
    name: "Schedules",
    icon: IconNames.TIME,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "setpoints",
    parentId: "aems",
    path: `setpoints`,
    name: "Setpoints",
    icon: IconNames.TEMPERATURE,
    scope: "user",
    display: true,
    components: components,
  },
  {
    id: "admin",
    parentId: "home",
    path: "",
    index: true,
    name: "Admin",
    icon: IconNames.SHIELD,
    scope: "admin",
    display: "admin",
  },
  {
    id: "change",
    parentId: "admin",
    path: `change`,
    name: "Change",
    icon: IconNames.EDIT,
    scope: "admin",
    display: "admin",
    components: components,
  },
  {
    id: "feedback",
    parentId: "admin",
    path: `feedback`,
    name: "Feedback",
    icon: IconNames.COMMENT,
    scope: "admin",
    display: "admin",
    components: components,
  },
  {
    id: "users",
    parentId: "admin",
    path: `users`,
    name: "Users",
    icon: IconNames.USER,
    scope: "admin",
    display: "admin",
    components: components,
  },
  {
    id: "banners",
    parentId: "admin",
    path: `banners`,
    name: "Banners",
    icon: IconNames.NOTIFICATIONS,
    scope: "admin",
    display: "admin",
    components: components,
  },
  {
    id: "logs",
    parentId: "admin",
    path: `logs`,
    name: "Logs",
    icon: IconNames.CONSOLE,
    scope: "admin",
    display: "admin",
    components: components,
  },
  {
    id: "auth",
    parentId: "home",
    path: `auth`,
    name: "Auth",
    icon: IconNames.USER,
    index: true,
  },
  {
    id: "login",
    parentId: "auth",
    path: `login`,
    name: "Login",
    icon: IconNames.LOG_IN,
  },
  {
    id: "logout",
    parentId: "auth",
    path: `logout`,
    name: "Logout",
    icon: IconNames.LOG_OUT,
  },
  {
    id: "denied",
    parentId: "auth",
    path: `denied`,
    name: "Access Denied",
    icon: IconNames.STOP,
  },
];

export const staticRoutes = buildTree<Route>(
  deepFreeze(
    routes.map((v) => {
      v.display = hiddenRoutes.includes(v.id) ? false : v.display;
      return v;
    }),
  ),
);
