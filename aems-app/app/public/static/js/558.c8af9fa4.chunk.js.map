{"version":3,"file":"static/js/558.c8af9fa4.chunk.js","mappings":"4UAkCMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYC,GAA4B,IAAD,yBACrC,cAAMA,IAWRC,aAAe,SAACC,EAA0BC,GACxC,OAAO,SAACC,GACN,IAAQC,EAAY,EAAKC,MAAjBD,QACR,GACO,UADCH,EAEJ,OAAO,EAAKK,cACQC,IAAlBL,EAA8B,CAAEM,MAAOL,GAAU,CAAEC,SAASK,EAAAA,EAAAA,OAAML,EAAS,CAAEI,MAAOL,QAlBvD,EAyBvCO,aAAe,WACb,IAAQF,EAAU,EAAKH,MAAfG,MACFN,GAAgBS,EAAAA,EAAAA,IAA2BH,GACjD,EAAKT,MAAMa,oBAAoBV,GAC/B,EAAKI,SAAS,CACZE,OAAOK,EAAAA,EAAAA,IAAyB,IAChCT,QAAS,QA/B0B,EAmCvCU,WAAa,SAACZ,GACZ,IAAQa,EAAcb,EAAda,GAAIP,EAAUN,EAAVM,MACZ,EAAKF,SAAS,CAAEF,QAAS,CAAEW,GAAAA,EAAIP,MAAAA,MArCM,EAwCvCQ,aAAe,WACb,EAAKV,SAAS,CAAEF,QAAS,QAzCY,EA4CvCa,WAAa,WAAO,IAAD,EACjB,YAAsB,EAAKZ,aAA3B,aAAsB,EAAYD,QAA1BW,EAAR,EAAQA,GAAIP,EAAZ,EAAYA,MACZ,EAAKT,MAAMmB,oBAAoB,CAAEH,GAAAA,EAAIP,MAAAA,IACrC,EAAKF,SAAS,CAAEF,QAAS,QA/CY,EAkDvCe,aAAe,SAACjB,GACd,IAAQa,EAAOb,EAAPa,QACGR,IAAPQ,GACF,EAAKhB,MAAMqB,oBAAoBL,IAnDjC,EAAKV,MAAQ,CACXG,OAAOK,EAAAA,EAAAA,IAAyB,IAChCT,QAAS,MAJ0B,EA8HtC,OAxHA,yCAED,WACEiB,KAAKtB,MAAMuB,uBACZ,oBA+CD,WAAU,IAAD,OACCC,EAAaF,KAAKtB,MAAlBwB,SACR,EAA2BF,KAAKhB,MAAxBG,EAAR,EAAQA,MAAOJ,EAAf,EAAeA,QACf,OACE,iBAAKoB,UAAW,gBAAhB,WACE,SAAC,MAAD,UAAYH,KAAKtB,SACjB,kDACA,gBAAKyB,UAAU,SAAf,UACE,UAAC,KAAD,CAAMC,aAAW,EAAjB,WACE,0BACE,kBACED,UAAWE,EAAAA,IACXC,KAAK,OACLxB,MAAOK,EACPoB,SAAU,SAACC,GAAD,OAAO,EAAK7B,aAAa,QAAlB,CAA2B6B,EAAEC,OAAO3B,aAGzD,0BACE,SAAC,KAAD,CAAQ4B,KAAMC,EAAAA,IAA2BC,OAAQC,EAAAA,EAAAA,QAAgBC,SAAO,EAACC,QAASf,KAAKX,uBAI7F,4CACA,gBAAKc,UAAU,OAAf,gBACGD,QADH,IACGA,OADH,EACGA,EAAUc,KAAI,SAACnC,EAAeoC,GAC7B,OAAOpC,EAAca,MAAd,OAAqBX,QAArB,IAAqBA,OAArB,EAAqBA,EAASW,KACnC,UAAC,KAAD,CAAkCU,aAAW,EAA7C,WACE,0BACE,kBACED,UAAWE,EAAAA,IACXC,KAAK,OACLxB,MAAOC,EAAQI,MACfoB,SAAU,SAACC,GAAD,OAAO,EAAK7B,aAAa,QAASE,EAA3B,CAA0C2B,EAAEC,OAAO3B,aAGxE,4BACE,SAAC,KAAD,CACE4B,KAAMC,EAAAA,IACNC,OAAQC,EAAAA,EAAAA,QACRC,SAAO,EACPC,QAAS,kBAAM,EAAKnB,iBAEtB,SAAC,KAAD,CAAQc,KAAMC,EAAAA,IAAiBC,OAAQC,EAAAA,EAAAA,QAAgBC,SAAO,EAACC,QAAS,kBAAM,EAAKpB,uBAhB5Ed,EAAca,IAAMuB,IAoB/B,UAAC,KAAD,CAAkCb,aAAW,EAA7C,WACE,yBAAMvB,EAAcM,SACpB,4BACE,SAAC,KAAD,CACEuB,KAAMC,EAAAA,IACNC,OAAQC,EAAAA,EAAAA,QACRC,SAAO,EACPC,QAAS,kBAAM,EAAKtB,WAAWZ,OAEjC,SAAC,KAAD,CACE6B,KAAMC,EAAAA,IACNC,OAAQC,EAAAA,EAAAA,QACRC,SAAO,EACPC,QAAS,kBAAM,EAAKjB,aAAajB,IACjCqC,WAAWC,EAAAA,EAAAA,IAAsBtC,UAd5BA,EAAca,IAAMuB,eAuB1C,EA/HGxC,CAAsB2C,EAAAA,WAuItBC,EAAmB,CACvBpB,mBAAAA,EAAAA,GACAqB,qBAAAA,EAAAA,GACA/B,oBAAAA,EAAAA,GACAM,oBAAAA,EAAAA,GACAE,oBAAAA,EAAAA,IAGF,GAAewB,EAAAA,EAAAA,KAbS,SAACvC,GAAD,MAAiB,CACvCwC,gBAAgBC,EAAAA,EAAAA,IAAyBzC,GACzCkB,UAAUwB,EAAAA,EAAAA,IAA2B1C,MAWCqC,EAAxC,CAA0D5C,G,UC5K1D,EAFa,SAACC,GAAD,OAAgB,SAACiD,EAAA,GAAD,kBAAejD,GAAf,IAAsBkD,YAAa,SAACC,GAAD,OAAO,SAAC,GAAD,UAAmBA,U,uKCYpFrC,EAA2B,SAACX,GAChC,OAAOiD,GAAAA,GAASC,OAAO,uBAGnBZ,EAAwB,SAACtC,GAC7B,OAA2D,KAApDmD,EAAAA,EAAAA,KAAIC,OAAOC,QAAoB,OAAbrD,QAAa,IAAbA,OAAA,EAAAA,EAAesD,SAAU,MAG9C7C,EAA6B,WAA8E,IAA7EH,EAA4E,uDAA5DK,IAC5C4C,EAAW,CACfjD,MAAO,GACPiD,SAAUC,EAAAA,GACVC,SAAUC,EAAAA,GACVC,QAASC,EAAAA,GACTC,QAASC,EAAAA,IAEXP,EAASjD,OAAQyD,EAAAA,EAAAA,IAAoB,MAAOR,GAC5C,IAAMS,EAAW,CACf1D,MAAO,GACP2D,UAAU,EACVC,WAAWC,EAAAA,EAAAA,IAAaC,EAAAA,IACxBC,SAASF,EAAAA,EAAAA,IAAaG,EAAAA,KAExBN,EAAS1D,OAAQiE,EAAAA,EAAAA,IAAoB,MAAOP,GAC5C,IAAMQ,EAAa,CACjBlE,MAAO,GACP2D,UAAU,EACVC,WAAWC,EAAAA,EAAAA,IAAaC,EAAAA,IACxBC,SAASF,EAAAA,EAAAA,IAAaG,EAAAA,KAExBE,EAAWlE,OAAQiE,EAAAA,EAAAA,IAAoB,MAAOC,GAC9C,IAAMC,EAAU,CACdC,EAAAA,GAAAA,gBACAA,EAAAA,GAAAA,uBACAA,EAAAA,GAAAA,kBACAA,EAAAA,GAAAA,gBACAA,EAAAA,GAAAA,eACAA,EAAAA,GAAAA,oBACAA,EAAAA,GAAAA,aACAA,EAAAA,GAAAA,gBACAA,EAAAA,GAAAA,gBACAA,EAAAA,GAAAA,iBACAA,EAAAA,GAAAA,gBACAA,EAAAA,GAAAA,eACAvC,KAAI,SAACwC,GAAD,OAAOA,EAAEC,QACTC,EAAWH,EAAAA,GAAAA,OAAAA,KAAuB,SAACC,GAAD,MAAQ,CAC9CrE,MAAOqE,EAAErE,MACTmB,KAAMgD,EAAQK,SAASH,EAAEC,MAAS,UAAuB,eAE3D,MAAO,CACLtE,MAAAA,EACAiD,SAAAA,EACAwB,eAAgBf,EAChBgB,gBAAiBhB,EACjBiB,kBAAmBjB,EACnBkB,iBAAkBlB,EAClBmB,eAAgBnB,EAChBoB,iBAAkBZ,EAClBa,eAAgBb,EAChBc,gBAAiBd,EACjBK,SAAUA,K,wRCrERU,EAAe,IACfC,EAAiB,EACjBpB,EAAqB,IACrBqB,EAAe,KACfnB,EAAmB,KACnBoB,EAAc,QACdC,EAAc,YAIdxB,EAAe,SAAClE,GAAD,OACnBgD,GAAAA,CAAO,QAAS,CAACyC,IACdE,IAAIC,KAAKC,MAAM7F,EAAQ,IAAK,SAC5B2F,IAAI3F,EAAQ,GAAI,WAChBiD,OAAOwC,IAENK,EAAe,SAAC9F,GAAD,OACnBgD,GAAAA,CAAO,QAAS,CAACyC,IACdE,IAAIC,KAAKC,MAAM7F,EAAQ,IAAK,SAC5B2F,IAAI3F,EAAQ,GAAI,WAChBiD,OAAOyC,IAINK,EAAY,SAAC/F,EAAgBgG,GAAjB,OAC6D,GAH1D,SAAChG,EAAeiG,EAAkBD,GAAlC,OAAuDA,GAAmB,IAAVhG,EAAciG,EAAWjG,EAG5GkG,CAAalD,GAAAA,CAAOhD,EAAO,CAACyF,EAAaC,IAAcS,QAAS,GAAIH,GACpEhD,GAAAA,CAAOhD,EAAO,CAACyF,EAAaC,IAAcU,WAEtC9B,EAAsB,SAC1B9C,EACAuC,GAIA,IAAMC,OAAkC5D,KAAf,OAAR2D,QAAQ,IAARA,OAAA,EAAAA,EAAUC,WAAgCD,EAASC,SAC9DC,GAAYoC,EAAAA,EAAAA,UAAStC,EAASE,WAAaF,EAASE,UAAY8B,EAAUhC,EAASE,WAAW,GAC9FG,GAAUiC,EAAAA,EAAAA,UAAStC,EAASK,SAAWL,EAASK,QAAU2B,EAAUhC,EAASK,SAAS,GAC5F,OAAQ5C,GACN,IAAK,YACH,MAAM,GAAN,OAAUsE,EAAa7B,IACzB,IAAK,UACH,MAAM,GAAN,OAAU6B,EAAa1B,IAEzB,QACE,OAAOJ,EACW,IAAdC,GAA+B,OAAZG,EACjB,mBADF,oCAE+B0B,EAAa7B,GAF5C,yBAEuE6B,EAAa1B,IACpF,wB,qZChDJkC,EAAmBC,SAASC,KAC5BC,GAAe,UAACC,EAAAA,GAAAA,aAAAA,eAAD,aAAC,EAAmCC,MAAkB,EACrEC,GAAe,UAACF,EAAAA,GAAAA,aAAAA,eAAD,aAAC,EAAmCG,MAAkB,EACrEpD,GAAmB,UAACiD,EAAAA,GAAAA,aAAAA,eAAD,aAAC,EAAmCI,UAAsB,EAC7EC,GAAc,UAACL,EAAAA,GAAAA,YAAAA,eAAD,aAAC,EAAkCC,MAAkB,GACnEhD,GAAkB,UAAC+C,EAAAA,GAAAA,YAAAA,eAAD,aAAC,EAAkCI,UAAsB,GAC3EE,GAAc,UAACN,EAAAA,GAAAA,YAAAA,eAAD,aAAC,EAAkCG,MAAkB,GACnEhD,GAAkB,UAAC6C,EAAAA,GAAAA,YAAAA,eAAD,aAAC,EAAkCI,UAAsB,GAC3EG,EAAeF,EACfG,EAAeF,EACfzD,GAAmB,UAACmD,EAAAA,GAAAA,aAAAA,eAAD,aAAC,EAAmCI,UAAsB,GAI7EhD,EAAsB,SAAtBA,EACJtC,EACA8B,GAEA,MACO,QADC9B,EAEE,sBAAN,OAA6BsC,EAAoB,WAAYR,GAA7D,sBAAoFQ,EAClF,WACAR,GAFF,gCAGyBQ,EAAoB,UAAWR,GAHxD,qBAG8EQ,EAC5E,UACAR,IAOI,GAAN,OAAUA,EAAS9B,GAAnB,cAIA2F,EAAqB,SAAC7D,GAC1B,OAAIA,EAASE,SAAWiD,GAAgBnD,EAASE,SAAWoD,EACpD,kCAAN,OAAyCH,EAAzC,YAAyDG,EAAzD,MAEAtD,EAASA,SAAWA,EAASI,QAAU4C,EAAmBhD,EAASE,SAAW,GAC9EF,EAASA,SAAWA,EAASM,QAAU0C,EAAmBhD,EAASE,SAAW,EAExE,2CAAN,OAAkDF,EAASI,QAAU4C,EAAmBhD,EAASE,SAAW,EAA5G,YACEF,EAASM,QAAU0C,EAAmBhD,EAASE,SAAW,EAD5D,KAGSF,EAASI,QAAUqD,GAAezD,EAASM,QAAUoD,EACxD,wDAAN,OAA+DD,EAA/D,YAA8EC,EAA9E,KACS1D,EAASA,SAAW,KAAQ,EAC9B,oDACEA,EAASE,SAAW,IAAM,EAC5B,mCACEF,EAASI,QAAU,KAAQ,GAAKJ,EAASM,QAAU,KAAQ,EAC7D,qEADF,GAKHwD,EAAkB,SAAC9D,GACvB,SACGA,IACA+C,EAAAA,EAAAA,UAAS/C,EAASA,YAClB+C,EAAAA,EAAAA,UAAS/C,EAASE,YAClB6C,EAAAA,EAAAA,UAAS/C,EAASI,WAClB2C,EAAAA,EAAAA,UAAS/C,EAASM,gBAIyExD,IAAvF+G,EAAmB7D","sources":["routes/Configuration/Configuration.tsx","routes/Configuration/index.tsx","utils/configuration.ts","utils/schedule.ts","utils/setpoint.ts"],"sourcesContent":["import \"./style.scss\";\n\nimport { Button, Card, Classes, Intent } from \"@blueprintjs/core\";\nimport {\n  IConfiguration,\n  IFilter,\n  createConfiguration,\n  deleteConfiguration,\n  filterConfigurations,\n  readConfigurations,\n  selectFilterConfigurations,\n  selectReadConfigurations,\n  updateConfiguration,\n} from \"controllers/configurations/action\";\nimport { createConfigurationDefault, createConfigurationLabel, isConfigurationDelete } from \"utils/configuration\";\n\nimport { DeepPartial } from \"../../utils/types\";\nimport { Header } from \"components\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport React from \"react\";\nimport { RootProps } from \"routes\";\nimport { connect } from \"react-redux\";\nimport { merge } from \"lodash\";\n\ninterface ConfigurationProps extends RootProps {\n  readConfigurations: () => void;\n  filterConfigurations: (payload: IFilter) => void;\n  createConfiguration: (payload: DeepPartial<IConfiguration>) => void;\n  updateConfiguration: (payload: DeepPartial<IConfiguration>) => void;\n  deleteConfiguration: (payload: number) => void;\n  configurations?: IConfiguration[];\n  filtered?: IConfiguration[];\n}\n\nclass Configuration extends React.Component<ConfigurationProps, any> {\n  constructor(props: ConfigurationProps) {\n    super(props);\n    this.state = {\n      label: createConfigurationLabel({}),\n      editing: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.readConfigurations();\n  }\n\n  handleChange = (field: \"label\" | \"value\", configuration?: DeepPartial<IConfiguration>) => {\n    return (value: string) => {\n      const { editing } = this.state;\n      switch (field) {\n        case \"label\":\n          return this.setState(\n            configuration === undefined ? { label: value } : { editing: merge(editing, { label: value }) }\n          );\n        case \"value\":\n      }\n    };\n  };\n\n  handleCreate = () => {\n    const { label } = this.state;\n    const configuration = createConfigurationDefault(label);\n    this.props.createConfiguration(configuration);\n    this.setState({\n      label: createConfigurationLabel({}),\n      editing: null,\n    });\n  };\n\n  handleEdit = (configuration: DeepPartial<IConfiguration>) => {\n    const { id, label } = configuration;\n    this.setState({ editing: { id, label } });\n  };\n\n  handleCancel = () => {\n    this.setState({ editing: null });\n  };\n\n  handleSave = () => {\n    const { id, label } = this.state?.editing;\n    this.props.updateConfiguration({ id, label });\n    this.setState({ editing: null });\n  };\n\n  handleDelete = (configuration: DeepPartial<IConfiguration>) => {\n    const { id } = configuration;\n    if (id !== undefined) {\n      this.props.deleteConfiguration(id);\n    }\n  };\n\n  render() {\n    const { filtered } = this.props;\n    const { label, editing } = this.state;\n    return (\n      <div className={\"configuration\"}>\n        <Header {...this.props} />\n        <h2>Create Configuration</h2>\n        <div className=\"create\">\n          <Card interactive>\n            <div>\n              <input\n                className={Classes.INPUT}\n                type=\"text\"\n                value={label}\n                onChange={(e) => this.handleChange(\"label\")(e.target.value)}\n              />\n            </div>\n            <div>\n              <Button icon={IconNames.ADD_TO_ARTIFACT} intent={Intent.PRIMARY} minimal onClick={this.handleCreate} />\n            </div>\n          </Card>\n        </div>\n        <h1>Configurations</h1>\n        <div className=\"list\">\n          {filtered?.map((configuration, i) => {\n            return configuration.id === editing?.id ? (\n              <Card key={configuration.id || i} interactive>\n                <div>\n                  <input\n                    className={Classes.INPUT}\n                    type=\"text\"\n                    value={editing.label}\n                    onChange={(e) => this.handleChange(\"label\", configuration)(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Button\n                    icon={IconNames.FLOPPY_DISK}\n                    intent={Intent.PRIMARY}\n                    minimal\n                    onClick={() => this.handleSave()}\n                  />\n                  <Button icon={IconNames.CROSS} intent={Intent.PRIMARY} minimal onClick={() => this.handleCancel()} />\n                </div>\n              </Card>\n            ) : (\n              <Card key={configuration.id || i} interactive>\n                <div>{configuration.label}</div>\n                <div>\n                  <Button\n                    icon={IconNames.EDIT}\n                    intent={Intent.PRIMARY}\n                    minimal\n                    onClick={() => this.handleEdit(configuration)}\n                  />\n                  <Button\n                    icon={IconNames.TRASH}\n                    intent={Intent.WARNING}\n                    minimal\n                    onClick={() => this.handleDelete(configuration)}\n                    disabled={!isConfigurationDelete(configuration)}\n                  />\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  configurations: selectReadConfigurations(state),\n  filtered: selectFilterConfigurations(state),\n});\n\nconst mapActionToProps = {\n  readConfigurations,\n  filterConfigurations,\n  createConfiguration,\n  updateConfiguration,\n  deleteConfiguration,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Configuration);\n","import Configuration from \"./Configuration\";\nimport RouteBase from \"routes/RouteBase\";\n\nconst Root = (props: any) => <RouteBase {...props} renderRoute={(p) => <Configuration {...p} />} />;\n\nexport default Root;\n","import {\n  COOLING_DEFAULT,\n  DEADBAND_DEFAULT,\n  HEATING_DEFAULT,\n  SETPOINT_DEFAULT,\n  createSetpointLabel,\n} from \"utils/setpoint\";\nimport { END_TIME_DEFAULT, START_TIME_DEFAULT, createScheduleLabel, toDataFormat } from \"utils/schedule\";\n\nimport { DeepPartial } from \"./types\";\nimport { HolidayType } from \"common\";\nimport { IConfiguration } from \"controllers/configurations/action\";\nimport moment from \"moment\";\nimport { sum } from \"lodash\";\n\nconst createConfigurationLabel = (configuration?: DeepPartial<IConfiguration>) => {\n  return moment().format(\"dddd, MMMM Do YYYY\");\n};\n\nconst isConfigurationDelete = (configuration: DeepPartial<IConfiguration>) => {\n  return sum(Object.values(configuration?._count || {})) === 0;\n};\n\nconst createConfigurationDefault = (label: string = createConfigurationLabel()): DeepPartial<IConfiguration> => {\n  const setpoint = {\n    label: \"\",\n    setpoint: SETPOINT_DEFAULT,\n    deadband: DEADBAND_DEFAULT,\n    heating: HEATING_DEFAULT,\n    cooling: COOLING_DEFAULT,\n  };\n  setpoint.label = createSetpointLabel(\"all\", setpoint);\n  const schedule = {\n    label: \"\",\n    occupied: true,\n    startTime: toDataFormat(START_TIME_DEFAULT),\n    endTime: toDataFormat(END_TIME_DEFAULT),\n  };\n  schedule.label = createScheduleLabel(\"all\", schedule);\n  const unoccupied = {\n    label: \"\",\n    occupied: false,\n    startTime: toDataFormat(START_TIME_DEFAULT),\n    endTime: toDataFormat(END_TIME_DEFAULT),\n  };\n  unoccupied.label = createScheduleLabel(\"all\", unoccupied);\n  const enabled = [\n    HolidayType.NewYearsDayType,\n    HolidayType.MartinLutherKingJrType,\n    HolidayType.PresidentsDayType,\n    HolidayType.MemorialDayType,\n    HolidayType.JuneteenthType,\n    HolidayType.IndependenceDayType,\n    HolidayType.LaborDayType,\n    HolidayType.ColumbusDayType,\n    HolidayType.VeteransDayType,\n    HolidayType.ThanksgivingType,\n    HolidayType.BlackFridayType,\n    HolidayType.ChristmasType,\n  ].map((h) => h.name);\n  const holidays = HolidayType.values.map((h) => ({\n    label: h.label,\n    type: enabled.includes(h.name) ? (\"Enabled\" as const) : (\"Disabled\" as const),\n  }));\n  return {\n    label,\n    setpoint,\n    mondaySchedule: schedule,\n    tuesdaySchedule: schedule,\n    wednesdaySchedule: schedule,\n    thursdaySchedule: schedule,\n    fridaySchedule: schedule,\n    saturdaySchedule: unoccupied,\n    sundaySchedule: unoccupied,\n    holidaySchedule: unoccupied,\n    holidays: holidays,\n  };\n};\n\nexport { createConfigurationLabel, createConfigurationDefault, isConfigurationDelete };\n","import { isNumber, sum } from \"lodash\";\n\nimport { ISchedule } from \"controllers/schedules/action\";\nimport moment from \"moment\";\nimport { DeepPartial } from \"./types\";\n\nconst TIME_PADDING = 120;\nconst START_TIME_MIN = 0 * 60;\nconst START_TIME_DEFAULT = 8 * 60;\nconst END_TIME_MAX = 24 * 60;\nconst END_TIME_DEFAULT = 18 * 60;\nconst DATA_FORMAT = \"HH:mm\";\nconst TIME_FORMAT = \"h:mm\\xa0a\";\n\ntype Required = \"startTime\" | \"endTime\";\n\nconst toDataFormat = (value: number) =>\n  moment(\"00:00\", [DATA_FORMAT])\n    .add(Math.trunc(value / 60), \"hours\")\n    .add(value % 60, \"minutes\")\n    .format(DATA_FORMAT);\n\nconst toTimeFormat = (value: number) =>\n  moment(\"00:00\", [DATA_FORMAT])\n    .add(Math.trunc(value / 60), \"hours\")\n    .add(value % 60, \"minutes\")\n    .format(TIME_FORMAT);\n\nconst toUpperBound = (value: number, boundary: number, upper?: boolean) => (upper && value === 0 ? boundary : value);\n\nconst toMinutes = (value?: string, upper?: boolean) =>\n  toUpperBound(moment(value, [DATA_FORMAT, TIME_FORMAT]).hours(), 24, upper) * 60 +\n  moment(value, [DATA_FORMAT, TIME_FORMAT]).minutes();\n\nconst createScheduleLabel = (\n  type: \"all\" | Required,\n  schedule:\n    | (DeepPartial<ISchedule> & Pick<ISchedule, Required>)\n    | { occupied?: boolean; startTime: number; endTime: number }\n): string => {\n  const occupied = schedule?.occupied === undefined ? true : schedule.occupied;\n  const startTime = isNumber(schedule.startTime) ? schedule.startTime : toMinutes(schedule.startTime, false);\n  const endTime = isNumber(schedule.endTime) ? schedule.endTime : toMinutes(schedule.endTime, true);\n  switch (type) {\n    case \"startTime\":\n      return `${toTimeFormat(startTime)}`;\n    case \"endTime\":\n      return `${toTimeFormat(endTime)}`;\n    case \"all\":\n    default:\n      return occupied\n        ? startTime === 0 && endTime === 1440\n          ? \"Occupied All Day\"\n          : `Occupied From Start Time: ${toTimeFormat(startTime)} To End Time: ${toTimeFormat(endTime)}`\n        : \"Unoccupied All Day\";\n  }\n};\n\nconst getScheduleMessage = (schedule: DeepPartial<ISchedule> & Pick<ISchedule, Required>): string | undefined => {\n  return undefined;\n};\n\nconst isScheduleValid = (schedule: DeepPartial<ISchedule> & Pick<ISchedule, Required>): boolean => {\n  return getScheduleMessage(schedule) === undefined;\n};\n\nconst isScheduleDelete = (schedule: DeepPartial<ISchedule>) => {\n  return sum(Object.values(schedule?._count || {})) === 0;\n};\n\nexport {\n  TIME_PADDING,\n  START_TIME_MIN,\n  START_TIME_DEFAULT,\n  END_TIME_MAX,\n  END_TIME_DEFAULT,\n  DATA_FORMAT,\n  TIME_FORMAT,\n  toDataFormat,\n  toTimeFormat,\n  toMinutes,\n  createScheduleLabel,\n  getScheduleMessage,\n  isScheduleValid,\n  isScheduleDelete,\n};\n","import { isNumber, sum } from \"lodash\";\n\nimport { ISetpoint } from \"controllers/setpoints/action\";\nimport { ValidateType } from \"common\";\nimport { DeepPartial } from \"./types\";\n\nconst SETPOINT_PADDING = parseInt(process.env.REACT_APP_SETPOINT_PADDING || \"2\");\nconst DEADBAND_MIN = (ValidateType.DeadbandType.options?.min as number) || 2;\nconst DEADBAND_MAX = (ValidateType.DeadbandType.options?.max as number) || 6;\nconst DEADBAND_DEFAULT = (ValidateType.DeadbandType.options?.default as number) || 4;\nconst HEATING_MIN = (ValidateType.HeatingType.options?.min as number) || 55;\nconst HEATING_DEFAULT = (ValidateType.HeatingType.options?.default as number) || 60;\nconst COOLING_MAX = (ValidateType.CoolingType.options?.max as number) || 85;\nconst COOLING_DEFAULT = (ValidateType.CoolingType.options?.default as number) || 80;\nconst SETPOINT_MIN = HEATING_MIN;\nconst SETPOINT_MAX = COOLING_MAX;\nconst SETPOINT_DEFAULT = (ValidateType.SetpointType.options?.default as number) || 70;\n\ntype Required = \"setpoint\" | \"deadband\" | \"heating\" | \"cooling\";\n\nconst createSetpointLabel = (\n  type: \"all\" | Required,\n  setpoint: DeepPartial<ISetpoint> & Pick<ISetpoint, Required>\n): string => {\n  switch (type) {\n    case \"all\":\n      return `Occupied Setpoint: ${createSetpointLabel(\"setpoint\", setpoint)} Deadband: ${createSetpointLabel(\n        \"deadband\",\n        setpoint\n      )} Unoccupied Heating: ${createSetpointLabel(\"heating\", setpoint)} Cooling: ${createSetpointLabel(\n        \"cooling\",\n        setpoint\n      )}`;\n    case \"setpoint\":\n    case \"deadband\":\n    case \"heating\":\n    case \"cooling\":\n    default:\n      return `${setpoint[type]}º\\xa0F`;\n  }\n};\n\nconst getSetpointMessage = (setpoint: DeepPartial<ISetpoint> & Pick<ISetpoint, Required>): string | undefined => {\n  if (setpoint.deadband < DEADBAND_MIN || setpoint.deadband > DEADBAND_MAX) {\n    return `Deadband must be in the range [${DEADBAND_MIN},${DEADBAND_MAX}].`;\n  } else if (\n    setpoint.setpoint < setpoint.heating + SETPOINT_PADDING + setpoint.deadband / 2 ||\n    setpoint.setpoint > setpoint.cooling - SETPOINT_PADDING - setpoint.deadband / 2\n  ) {\n    return `Occupied setpoint must be in the range [${setpoint.heating + SETPOINT_PADDING + setpoint.deadband / 2},${\n      setpoint.cooling - SETPOINT_PADDING - setpoint.deadband / 2\n    }]`;\n  } else if (setpoint.heating < HEATING_MIN || setpoint.cooling > COOLING_MAX) {\n    return `Unoccupied heating and cooling must be in the range [${HEATING_MIN},${COOLING_MAX}]`;\n  } else if (setpoint.setpoint % 0.5 !== 0) {\n    return \"Occupied setpoint must be a whole or half degree.\";\n  } else if (setpoint.deadband % 1 !== 0) {\n    return \"Deadband must be a whole degree.\";\n  } else if (setpoint.heating % 0.5 !== 0 || setpoint.cooling % 0.5 !== 0) {\n    return \"Unoccupied heating or cooling must be a whole or half degree.\";\n  }\n};\n\nconst isSetpointValid = (setpoint: DeepPartial<ISetpoint> | undefined): boolean => {\n  if (\n    !setpoint ||\n    !isNumber(setpoint.setpoint) ||\n    !isNumber(setpoint.deadband) ||\n    !isNumber(setpoint.heating) ||\n    !isNumber(setpoint.cooling)\n  ) {\n    return false;\n  }\n  return getSetpointMessage(setpoint as DeepPartial<ISetpoint> & Pick<ISetpoint, Required>) === undefined;\n};\n\nconst isSetpointDelete = (setpoint: DeepPartial<ISetpoint>) => {\n  return sum(Object.values(setpoint?._count || {})) === 0;\n};\n\nexport {\n  SETPOINT_PADDING,\n  DEADBAND_MIN,\n  DEADBAND_MAX,\n  DEADBAND_DEFAULT,\n  HEATING_MIN,\n  HEATING_DEFAULT,\n  COOLING_MAX,\n  COOLING_DEFAULT,\n  SETPOINT_MIN,\n  SETPOINT_MAX,\n  SETPOINT_DEFAULT,\n  createSetpointLabel,\n  getSetpointMessage,\n  isSetpointValid,\n  isSetpointDelete,\n};\n"],"names":["Configuration","props","handleChange","field","configuration","value","editing","state","setState","undefined","label","merge","handleCreate","createConfigurationDefault","createConfiguration","createConfigurationLabel","handleEdit","id","handleCancel","handleSave","updateConfiguration","handleDelete","deleteConfiguration","this","readConfigurations","filtered","className","interactive","Classes","type","onChange","e","target","icon","IconNames","intent","Intent","minimal","onClick","map","i","disabled","isConfigurationDelete","React","mapActionToProps","filterConfigurations","connect","configurations","selectReadConfigurations","selectFilterConfigurations","RouteBase","renderRoute","p","moment","format","sum","Object","values","_count","setpoint","SETPOINT_DEFAULT","deadband","DEADBAND_DEFAULT","heating","HEATING_DEFAULT","cooling","COOLING_DEFAULT","createSetpointLabel","schedule","occupied","startTime","toDataFormat","START_TIME_DEFAULT","endTime","END_TIME_DEFAULT","createScheduleLabel","unoccupied","enabled","HolidayType","h","name","holidays","includes","mondaySchedule","tuesdaySchedule","wednesdaySchedule","thursdaySchedule","fridaySchedule","saturdaySchedule","sundaySchedule","holidaySchedule","TIME_PADDING","START_TIME_MIN","END_TIME_MAX","DATA_FORMAT","TIME_FORMAT","add","Math","trunc","toTimeFormat","toMinutes","upper","boundary","toUpperBound","hours","minutes","isNumber","SETPOINT_PADDING","parseInt","process","DEADBAND_MIN","ValidateType","min","DEADBAND_MAX","max","default","HEATING_MIN","COOLING_MAX","SETPOINT_MIN","SETPOINT_MAX","getSetpointMessage","isSetpointValid"],"sourceRoot":""}