PROJECT_NAME=aems
PORT=3001
# logging
# transports: console, database
# levels: trace, debug, info, warn, error, fatal
LOG_TRANSPORTS=console,database
LOG_CONSOLE_LEVEL=info
LOG_DATABASE_LEVEL=info
LOG_HTTP_LEVEL=
LOG_PRISMA_LEVEL=
# session
SESSION_MAX_AGE=86400000
SESSION_SECRET=SeT_tHiS_iN_0x3A-.env.secrets-
# authjs store: jwt, database
# passport store: memory, database, redis
SESSION_STORE=jwt
# general
# pubsub: memory, database, redis
PRINT_ENV=true
GRAPHQL_EDITOR=true
GRAPHQL_PUBSUB=database
FILE_UPLOAD_PATH=./.tmp/upload/
CORS_ORIGIN=http://localhost:3000
# redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USERNAME=
REDIS_PASSWORD=
REDIS_DB=0
# authentication
AUTH_DEBUG=false
# frameworks: authjs, passport
AUTH_FRAMEWORK=authjs
# providers: local, super, bearer, keycloak
AUTH_PROVIDERS=local
JWT_SECRET=SeT_tHiS_iN_0x3A-.env.secrets-
JWT_EXPIRES_IN=86400
# keycloak configuration using issuer URL
KEYCLOAK_ISSUER_URL=http://localhost:8080/auth/sso/realms/default
KEYCLOAK_WELL_KNOWN_URL=
KEYCLOAK_AUTH_URL=
KEYCLOAK_TOKEN_URL=
KEYCLOAK_USERINFO_URL=
KEYCLOAK_CERTS_URL=
KEYCLOAK_LOGOUT_URL=
# or using well-known URL
# KEYCLOAK_WELL_KNOWN_URL=http://localhost:8080/auth/sso/realms/default/.well-known/openid-configuration
# or using individual URLs
# KEYCLOAK_AUTH_URL=http://localhost:8080/auth/sso/realms/default/protocol/openid-connect/auth
# KEYCLOAK_TOKEN_URL=http://localhost:8080/auth/sso/realms/default/protocol/openid-connect/token
# KEYCLOAK_USERINFO_URL=http://localhost:8080/auth/sso/realms/default/protocol/openid-connect/userinfo
# KEYCLOAK_CERTS_URL=http://localhost:8080/auth/sso/realms/default/protocol/openid-connect/certs
# KEYCLOAK_LOGOUT_URL=http://localhost:8080/auth/sso/realms/default/protocol/openid-connect/logout
KEYCLOAK_CALLBACK_URL=http://localhost:3000/api/auth/keycloak/callback
KEYCLOAK_SCOPE=openid profile
KEYCLOAK_CLIENT_ID=app
KEYCLOAK_CLIENT_SECRET=SeT_tHiS_iN_0x3A-.env.secrets-
# comma separated list of checks to perform
# checks: pkce, state, none, nonce
KEYCLOAK_CHECKS=
KEYCLOAK_PASS_ROLES=false
KEYCLOAK_DEFAULT_ROLE=
PASSWORD_STRENGTH=0
PASSWORD_VALIDATE=false
# database
DATABASE_URL="postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?schema=${DATABASE_SCHEMA}&connection_limit=5"
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=aems-develop
DATABASE_SCHEMA=public
DATABASE_USERNAME=develop
DATABASE_PASSWORD=password
# external services
# maptiles
EXT_MAP_PATH=/ext/map
EXT_MAP_ROLE=user
EXT_MAP_AUTHORIZED=http://localhost:4080
EXT_MAP_UNAUTHORIZED=http://localhost:3000
# nominatim
EXT_NOMINATIM_PATH=/ext/nominatim
EXT_NOMINATIM_ROLE=user
EXT_NOMINATIM_AUTHORIZED=http://localhost:5080
EXT_NOMINATIM_UNAUTHORIZED=http://localhost:3000
# wiki
EXT_WIKI_PATH=/ext/wiki
EXT_WIKI_ROLE=user
EXT_WIKI_AUTHORIZED=http://localhost:6080
EXT_WIKI_UNAUTHORIZED=http://localhost:3000
# internal services
# comma separated list of service names to enable
# specifying '*' will enable all services
# specifying the prefix '^' will shutdown the server when the service completes
# using the prefix '!' will disable the service
# e.g. INSTANCE_TYPE=*,!seed
INSTANCE_TYPE=*
PROXY_PROTOCOL=
PROXY_HOST=
PROXY_PORT=
# services
# log
SERVICE_LOG_PRUNE=true
# seed
SERVICE_SEED_DATA_PATH=../docker/seed/
SERVICE_SEED_BATCH_SIZE=100
SERVICE_SEED_GEOJSON_CONTRIBUTION=[geoBoundaries](https://www.geoboundaries.org)
# cleanup
CLEANUP_AGE=30 days
# volttron
VOLTTRON_CA=
VOLTTRON_MOCKED=true
SERVICE_CONFIG_AUTH_URL=https://localhost/authenticate
SERVICE_CONFIG_API_URL=https://localhost/gs
SERVICE_CONFIG_USERNAME=admin
SERVICE_CONFIG_PASSWORD=admin
SERVICE_CONFIG_STARTUP=true
SERVICE_CONFIG_TIMEOUT=5000
SERVICE_CONFIG_VERBOSE=false
SERVICE_CONFIG_HOLIDAY_SCHEDULE=false
SERVICE_SETUP_THERMOSTAT_PATHS=../../aems-edge/configurations/thermostats/
SERVICE_SETUP_ILC_PATHS=../../aems-edge/configurations/site.json
SERVICE_SETUP_TEMPLATE_PATHS=../../aems-edge/configurations/templates/
SERVICE_SETUP_STARTUP=true